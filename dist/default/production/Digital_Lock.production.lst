

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 13 20:11:42 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 22/03/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     0091                     	;# 
   175     0092                     	;# 
   176     0093                     	;# 
   177     0094                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009C                     	;# 
   181     009D                     	;# 
   182     009E                     	;# 
   183     009F                     	;# 
   184     010C                     	;# 
   185     010D                     	;# 
   186     010E                     	;# 
   187     010F                     	;# 
   188     018C                     	;# 
   189     018D                     	;# 
   190     0000                     	;# 
   191     0001                     	;# 
   192     0002                     	;# 
   193     0003                     	;# 
   194     0004                     	;# 
   195     0005                     	;# 
   196     0006                     	;# 
   197     0007                     	;# 
   198     0008                     	;# 
   199     0009                     	;# 
   200     000A                     	;# 
   201     000B                     	;# 
   202     000C                     	;# 
   203     000D                     	;# 
   204     000E                     	;# 
   205     000E                     	;# 
   206     000F                     	;# 
   207     0010                     	;# 
   208     0011                     	;# 
   209     0012                     	;# 
   210     0013                     	;# 
   211     0014                     	;# 
   212     0015                     	;# 
   213     0015                     	;# 
   214     0016                     	;# 
   215     0017                     	;# 
   216     0018                     	;# 
   217     0019                     	;# 
   218     001A                     	;# 
   219     001B                     	;# 
   220     001B                     	;# 
   221     001C                     	;# 
   222     001D                     	;# 
   223     001E                     	;# 
   224     001F                     	;# 
   225     0081                     	;# 
   226     0085                     	;# 
   227     0086                     	;# 
   228     0087                     	;# 
   229     0088                     	;# 
   230     0089                     	;# 
   231     008C                     	;# 
   232     008D                     	;# 
   233     008E                     	;# 
   234     0091                     	;# 
   235     0092                     	;# 
   236     0093                     	;# 
   237     0094                     	;# 
   238     0098                     	;# 
   239     0099                     	;# 
   240     009C                     	;# 
   241     009D                     	;# 
   242     009E                     	;# 
   243     009F                     	;# 
   244     010C                     	;# 
   245     010D                     	;# 
   246     010E                     	;# 
   247     010F                     	;# 
   248     018C                     	;# 
   249     018D                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000D                     	;# 
   264     000E                     	;# 
   265     000E                     	;# 
   266     000F                     	;# 
   267     0010                     	;# 
   268     0011                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0015                     	;# 
   273     0015                     	;# 
   274     0016                     	;# 
   275     0017                     	;# 
   276     0018                     	;# 
   277     0019                     	;# 
   278     001A                     	;# 
   279     001B                     	;# 
   280     001B                     	;# 
   281     001C                     	;# 
   282     001D                     	;# 
   283     001E                     	;# 
   284     001F                     	;# 
   285     0081                     	;# 
   286     0085                     	;# 
   287     0086                     	;# 
   288     0087                     	;# 
   289     0088                     	;# 
   290     0089                     	;# 
   291     008C                     	;# 
   292     008D                     	;# 
   293     008E                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0094                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009E                     	;# 
   303     009F                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312     07AB                     __pidataBANK0:
   313                           
   314                           ;initializer for _line
   315     07AB  3401               	retlw	1
   316                           
   317                           	psect	nvBANK0
   318     002E                     __pnvBANK0:
   319     002E                     _preload:
   320     002E                     	ds	2
   321     000E                     _TMR1	set	14
   322     0035                     _RB5	set	53
   323     0034                     _RB4	set	52
   324     0033                     _RB3	set	51
   325     0032                     _RB2	set	50
   326     0031                     _RB1	set	49
   327     0030                     _RB0	set	48
   328     0080                     _TMR1ON	set	128
   329     005E                     _PEIE	set	94
   330     005F                     _GIE	set	95
   331     0060                     _TMR1IF	set	96
   332     0085                     _T1CKPS1	set	133
   333     0084                     _T1CKPS0	set	132
   334     0081                     _TMR1CS	set	129
   335     0043                     _RD3	set	67
   336     0042                     _RD2	set	66
   337     0041                     _RD1	set	65
   338     0040                     _RD0	set	64
   339     0086                     _TRISB	set	134
   340     0434                     _TRISB4	set	1076
   341     0435                     _TRISB5	set	1077
   342     0460                     _TMR1IE	set	1120
   343     0443                     _TRISD3	set	1091
   344     0442                     _TRISD2	set	1090
   345     0441                     _TRISD1	set	1089
   346     0440                     _TRISD0	set	1088
   347     010C                     _EEDATA	set	268
   348     010D                     _EEADR	set	269
   349     018D                     _EECON2	set	397
   350     018C                     _EECON1bits	set	396
   351                           
   352                           	psect	strings
   353     0400                     __pstrings:
   354     0400                     stringtab:
   355     0400                     __stringtab:
   356     0400                     stringcode:	
   357                           ;	String table - string pointers are 1 byte each
   358                           
   359     0400                     stringdir:
   360     0400  3004               	movlw	high stringdir
   361     0401  008A               	movwf	10
   362     0402  0804               	movf	4,w
   363     0403  0A84               	incf	4,f
   364     0404  0782               	addwf	2,f
   365     0405                     __stringbase:
   366     0405  3400               	retlw	0
   367     0406                     __end_of__stringtab:
   368     0406                     STR_13:
   369     0406  3431               	retlw	49	;'1'
   370     0407  343A               	retlw	58	;':'
   371     0408  3445               	retlw	69	;'E'
   372     0409  346E               	retlw	110	;'n'
   373     040A  3474               	retlw	116	;'t'
   374     040B  3465               	retlw	101	;'e'
   375     040C  3472               	retlw	114	;'r'
   376     040D  3420               	retlw	32	;' '
   377     040E  3450               	retlw	80	;'P'
   378     040F  3461               	retlw	97	;'a'
   379     0410  3473               	retlw	115	;'s'
   380     0411  3473               	retlw	115	;'s'
   381     0412  3477               	retlw	119	;'w'
   382     0413  346F               	retlw	111	;'o'
   383     0414  3472               	retlw	114	;'r'
   384     0415  3464               	retlw	100	;'d'
   385     0416  3400               	retlw	0
   386     0417                     STR_9:
   387     0417  3441               	retlw	65	;'A'
   388     0418  3443               	retlw	67	;'C'
   389     0419  3443               	retlw	67	;'C'
   390     041A  3445               	retlw	69	;'E'
   391     041B  3453               	retlw	83	;'S'
   392     041C  3453               	retlw	83	;'S'
   393     041D  3420               	retlw	32	;' '
   394     041E  3447               	retlw	71	;'G'
   395     041F  3452               	retlw	82	;'R'
   396     0420  3441               	retlw	65	;'A'
   397     0421  344E               	retlw	78	;'N'
   398     0422  3454               	retlw	84	;'T'
   399     0423  3445               	retlw	69	;'E'
   400     0424  3444               	retlw	68	;'D'
   401     0425  3400               	retlw	0
   402     0426                     STR_10:
   403     0426  3450               	retlw	80	;'P'
   404     0427  3461               	retlw	97	;'a'
   405     0428  3473               	retlw	115	;'s'
   406     0429  3473               	retlw	115	;'s'
   407     042A  3420               	retlw	32	;' '
   408     042B  3449               	retlw	73	;'I'
   409     042C  346E               	retlw	110	;'n'
   410     042D  3463               	retlw	99	;'c'
   411     042E  346F               	retlw	111	;'o'
   412     042F  3472               	retlw	114	;'r'
   413     0430  3472               	retlw	114	;'r'
   414     0431  3465               	retlw	101	;'e'
   415     0432  3463               	retlw	99	;'c'
   416     0433  3474               	retlw	116	;'t'
   417     0434  3400               	retlw	0
   418     0435                     STR_12:
   419     0435  3450               	retlw	80	;'P'
   420     0436  3461               	retlw	97	;'a'
   421     0437  3473               	retlw	115	;'s'
   422     0438  3473               	retlw	115	;'s'
   423     0439  3420               	retlw	32	;' '
   424     043A  3443               	retlw	67	;'C'
   425     043B  3468               	retlw	104	;'h'
   426     043C  3461               	retlw	97	;'a'
   427     043D  346E               	retlw	110	;'n'
   428     043E  3467               	retlw	103	;'g'
   429     043F  3465               	retlw	101	;'e'
   430     0440  3464               	retlw	100	;'d'
   431     0441  3400               	retlw	0
   432     0442                     STR_3:
   433     0442  3434               	retlw	52	;'4'
   434     0443  3420               	retlw	32	;' '
   435     0444  3464               	retlw	100	;'d'
   436     0445  3469               	retlw	105	;'i'
   437     0446  3467               	retlw	103	;'g'
   438     0447  3469               	retlw	105	;'i'
   439     0448  3474               	retlw	116	;'t'
   440     0449  3420               	retlw	32	;' '
   441     044A  3470               	retlw	112	;'p'
   442     044B  3461               	retlw	97	;'a'
   443     044C  3473               	retlw	115	;'s'
   444     044D  3473               	retlw	115	;'s'
   445     044E  3400               	retlw	0
   446     044F                     STR_1:
   447     044F  3446               	retlw	70	;'F'
   448     0450  3469               	retlw	105	;'i'
   449     0451  3472               	retlw	114	;'r'
   450     0452  3473               	retlw	115	;'s'
   451     0453  3474               	retlw	116	;'t'
   452     0454  3420               	retlw	32	;' '
   453     0455  3454               	retlw	84	;'T'
   454     0456  3469               	retlw	105	;'i'
   455     0457  346D               	retlw	109	;'m'
   456     0458  3465               	retlw	101	;'e'
   457     0459  343F               	retlw	63	;'?'
   458     045A  3400               	retlw	0
   459     045B                     STR_5:
   460     045B  342A               	retlw	42	;'*'
   461     045C  343A               	retlw	58	;':'
   462     045D  344D               	retlw	77	;'M'
   463     045E  3461               	retlw	97	;'a'
   464     045F  3469               	retlw	105	;'i'
   465     0460  346E               	retlw	110	;'n'
   466     0461  3420               	retlw	32	;' '
   467     0462  346D               	retlw	109	;'m'
   468     0463  3465               	retlw	101	;'e'
   469     0464  346E               	retlw	110	;'n'
   470     0465  3475               	retlw	117	;'u'
   471     0466  3400               	retlw	0
   472     0467                     STR_8:
   473     0467  3457               	retlw	87	;'W'
   474     0468  3465               	retlw	101	;'e'
   475     0469  346C               	retlw	108	;'l'
   476     046A  3463               	retlw	99	;'c'
   477     046B  346F               	retlw	111	;'o'
   478     046C  346D               	retlw	109	;'m'
   479     046D  3465               	retlw	101	;'e'
   480     046E  3420               	retlw	32	;' '
   481     046F  343A               	retlw	58	;':'
   482     0470  3429               	retlw	41	;')'
   483     0471  3400               	retlw	0
   484     0472                     STR_2:
   485     0472  3453               	retlw	83	;'S'
   486     0473  3465               	retlw	101	;'e'
   487     0474  3474               	retlw	116	;'t'
   488     0475  3420               	retlw	32	;' '
   489     0476  3450               	retlw	80	;'P'
   490     0477  3461               	retlw	97	;'a'
   491     0478  3473               	retlw	115	;'s'
   492     0479  3473               	retlw	115	;'s'
   493     047A  3421               	retlw	33	;'!'
   494     047B  343A               	retlw	58	;':'
   495     047C  3400               	retlw	0
   496     047D                     STR_14:
   497     047D  3432               	retlw	50	;'2'
   498     047E  343A               	retlw	58	;':'
   499     047F  344E               	retlw	78	;'N'
   500     0480  3465               	retlw	101	;'e'
   501     0481  3477               	retlw	119	;'w'
   502     0482  3420               	retlw	32	;' '
   503     0483  3450               	retlw	80	;'P'
   504     0484  3461               	retlw	97	;'a'
   505     0485  3473               	retlw	115	;'s'
   506     0486  3473               	retlw	115	;'s'
   507     0487  3400               	retlw	0
   508     0488                     STR_6:
   509     0488  344F               	retlw	79	;'O'
   510     0489  346C               	retlw	108	;'l'
   511     048A  3464               	retlw	100	;'d'
   512     048B  3420               	retlw	32	;' '
   513     048C  3450               	retlw	80	;'P'
   514     048D  3461               	retlw	97	;'a'
   515     048E  3473               	retlw	115	;'s'
   516     048F  3473               	retlw	115	;'s'
   517     0490  343A               	retlw	58	;':'
   518     0491  3400               	retlw	0
   519     0492                     STR_7:
   520     0492  344E               	retlw	78	;'N'
   521     0493  3465               	retlw	101	;'e'
   522     0494  3477               	retlw	119	;'w'
   523     0495  3420               	retlw	32	;' '
   524     0496  3470               	retlw	112	;'p'
   525     0497  3461               	retlw	97	;'a'
   526     0498  3473               	retlw	115	;'s'
   527     0499  3473               	retlw	115	;'s'
   528     049A  343A               	retlw	58	;':'
   529     049B  3400               	retlw	0
   530     048C                     
   531                           	psect	cinit
   532     0011                     start_initialization:	
   533                           ; #config settings
   534                           
   535     0011                     __initialization:
   536                           
   537                           ; Initialize objects allocated to BANK0
   538     0011  120A  118A  27AB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   539     0016  00B0               	movwf	__pdataBANK0& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK0
   542     0017  01AB               	clrf	__pbssBANK0& (0+127)
   543     0018  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   544     0019  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   545                           
   546                           ; Clear objects allocated to COMMON
   547     001A  01FA               	clrf	__pbssCOMMON& (0+127)
   548     001B                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551     001B                     __end_of__initialization:
   552     001B  0183               	clrf	3
   553     001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssCOMMON
   556     007A                     __pbssCOMMON:
   557     007A                     _counter:
   558     007A                     	ds	1
   559                           
   560                           	psect	bssBANK0
   561     002B                     __pbssBANK0:
   562     002B                     _screen:
   563     002B                     	ds	1
   564     002C                     _take_input:
   565     002C                     	ds	1
   566     002D                     _digits:
   567     002D                     	ds	1
   568                           
   569                           	psect	dataBANK0
   570     0030                     __pdataBANK0:
   571     0030                     _line:
   572     0030                     	ds	1
   573                           
   574                           	psect	cstackCOMMON
   575     0070                     __pcstackCOMMON:
   576     0070                     ?_timer1_timermode:
   577     0070                     ?_LCD_INIT:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_LCD_SHOW_CURSOR:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_EEPROM_Read:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_LCD_CLEAR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_LCD_WRITE_STRING:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_main_menu:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_LCD_WRITE_CHAR:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_blink:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_LCD_DISPLAY:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_ISR:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ??_ISR:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_LCD_DATA_4BIT:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_LCD_CMD:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621     0070                     	ds	3
   622     0073                     ??_timer1_timermode:
   623     0073                     ??_EEPROM_Read:	
   624                           ; 1 bytes @ 0x3
   625                           
   626     0073                     ??_LCD_DATA_4BIT:	
   627                           ; 1 bytes @ 0x3
   628                           
   629     0073                     ?___wmul:	
   630                           ; 1 bytes @ 0x3
   631                           
   632     0073                     ?___lwdiv:	
   633                           ; 2 bytes @ 0x3
   634                           
   635     0073                     ?___lwmod:	
   636                           ; 2 bytes @ 0x3
   637                           
   638     0073                     LCD_DATA_4BIT@data:	
   639                           ; 2 bytes @ 0x3
   640                           
   641     0073                     EEPROM_Read@address:	
   642                           ; 1 bytes @ 0x3
   643                           
   644     0073                     ___wmul@multiplier:	
   645                           ; 1 bytes @ 0x3
   646                           
   647     0073                     ___lwdiv@divisor:	
   648                           ; 2 bytes @ 0x3
   649                           
   650     0073                     ___lwmod@divisor:	
   651                           ; 2 bytes @ 0x3
   652                           
   653                           
   654                           ; 2 bytes @ 0x3
   655     0073                     	ds	1
   656     0074                     ??_LCD_WRITE_CHAR:
   657     0074                     ??_LCD_CMD:	
   658                           ; 1 bytes @ 0x4
   659                           
   660     0074                     EEPROM_Read@data:	
   661                           ; 1 bytes @ 0x4
   662                           
   663                           
   664                           ; 1 bytes @ 0x4
   665     0074                     	ds	1
   666     0075                     timer1_timermode@preloaded:
   667     0075                     LCD_CMD@CMD:	
   668                           ; 1 bytes @ 0x5
   669                           
   670     0075                     LCD_WRITE_CHAR@low4:	
   671                           ; 1 bytes @ 0x5
   672                           
   673     0075                     ___wmul@multiplicand:	
   674                           ; 1 bytes @ 0x5
   675                           
   676     0075                     ___lwdiv@dividend:	
   677                           ; 2 bytes @ 0x5
   678                           
   679     0075                     ___lwmod@dividend:	
   680                           ; 2 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684     0075                     	ds	1
   685     0076                     ??_LCD_INIT:
   686     0076                     ??_LCD_SHOW_CURSOR:	
   687                           ; 1 bytes @ 0x6
   688                           
   689     0076                     ??_LCD_CLEAR:	
   690                           ; 1 bytes @ 0x6
   691                           
   692     0076                     ?_LCD_SET_CURSOR:	
   693                           ; 1 bytes @ 0x6
   694                           
   695     0076                     ??_LCD_DISPLAY:	
   696                           ; 1 bytes @ 0x6
   697                           
   698     0076                     LCD_WRITE_CHAR@high4:	
   699                           ; 1 bytes @ 0x6
   700                           
   701     0076                     LCD_SET_CURSOR@c:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706     0076                     	ds	1
   707     0077                     ??_LCD_SET_CURSOR:
   708     0077                     ??___wmul:	
   709                           ; 1 bytes @ 0x7
   710                           
   711     0077                     ??___lwdiv:	
   712                           ; 1 bytes @ 0x7
   713                           
   714     0077                     ??___lwmod:	
   715                           ; 1 bytes @ 0x7
   716                           
   717     0077                     LCD_WRITE_CHAR@data:	
   718                           ; 1 bytes @ 0x7
   719                           
   720     0077                     LCD_DISPLAY@state:	
   721                           ; 1 bytes @ 0x7
   722                           
   723     0077                     LCD_SHOW_CURSOR@c:	
   724                           ; 1 bytes @ 0x7
   725                           
   726     0077                     ___lwmod@counter:	
   727                           ; 1 bytes @ 0x7
   728                           
   729     0077                     ___wmul@product:	
   730                           ; 1 bytes @ 0x7
   731                           
   732     0077                     ___lwdiv@quotient:	
   733                           ; 2 bytes @ 0x7
   734                           
   735                           
   736                           ; 2 bytes @ 0x7
   737     0077                     	ds	1
   738     0078                     ??_LCD_WRITE_STRING:
   739     0078                     ??_main_menu:	
   740                           ; 1 bytes @ 0x8
   741                           
   742     0078                     blink@i:	
   743                           ; 1 bytes @ 0x8
   744                           
   745                           
   746                           ; 1 bytes @ 0x8
   747     0078                     	ds	1
   748     0079                     ___lwdiv@counter:
   749                           
   750                           ; 1 bytes @ 0x9
   751     0079                     	ds	1
   752     007A                     ??_EEPROM_Write:
   753                           
   754                           	psect	cstackBANK0
   755     0020                     __pcstackBANK0:	
   756                           ; 1 bytes @ 0xA
   757                           
   758     0020                     ?_EEPROM_Write:
   759     0020                     ??_blink:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0020                     LCD_SET_CURSOR@r:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0020                     EEPROM_Write@data:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0020                     LCD_WRITE_STRING@i:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 2 bytes @ 0x0
   773     0020                     	ds	1
   774     0021                     LCD_SET_CURSOR@high4:
   775     0021                     EEPROM_Write@address:	
   776                           ; 1 bytes @ 0x1
   777                           
   778                           
   779                           ; 1 bytes @ 0x1
   780     0021                     	ds	1
   781     0022                     LCD_WRITE_STRING@str:
   782     0022                     LCD_SET_CURSOR@low4:	
   783                           ; 1 bytes @ 0x2
   784                           
   785     0022                     EEPROM_Write@GIE_STATE:	
   786                           ; 1 bytes @ 0x2
   787                           
   788                           
   789                           ; 1 bytes @ 0x2
   790     0022                     	ds	1
   791     0023                     LCD_SET_CURSOR@temp:
   792                           
   793                           ; 1 bytes @ 0x3
   794     0023                     	ds	1
   795     0024                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x4
   798     0024                     	ds	3
   799     0027                     main@check_input:
   800                           
   801                           ; 2 bytes @ 0x7
   802     0027                     	ds	2
   803     0029                     main@password:
   804                           
   805                           ; 2 bytes @ 0x9
   806     0029                     	ds	2
   807                           
   808                           	psect	maintext
   809     001F                     __pmaintext:	
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 37 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  password        2    9[BANK0 ] unsigned short 
   820 ;;  check_input     2    7[BANK0 ] unsigned short 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       4       0       0       0
   832 ;;      Temps:          0       3       0       0       0
   833 ;;      Totals:         0       7       0       0       0
   834 ;;Total ram usage:        7 bytes
   835 ;; Hardware stack levels required when called: 5
   836 ;; This function calls:
   837 ;;		_EEPROM_Read
   838 ;;		_EEPROM_Write
   839 ;;		_LCD_CLEAR
   840 ;;		_LCD_INIT
   841 ;;		_LCD_SET_CURSOR
   842 ;;		_LCD_SHOW_CURSOR
   843 ;;		_LCD_WRITE_CHAR
   844 ;;		_LCD_WRITE_STRING
   845 ;;		___lwdiv
   846 ;;		___lwmod
   847 ;;		___wmul
   848 ;;		_blink
   849 ;;		_main_menu
   850 ;;		_timer1_timermode
   851 ;; This function is called by:
   852 ;;		Startup code after reset
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856     001F                     _main:	
   857                           ;psect for function _main
   858                           
   859     001F                     l2070:	
   860                           ;incstack = 0
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   862                           
   863                           
   864                           ;main.c: 40:     preload = 15536;
   865     001F  30B0               	movlw	176
   866     0020  1283               	bcf	3,5	;RP0=0, select bank0
   867     0021  1303               	bcf	3,6	;RP1=0, select bank0
   868     0022  00AE               	movwf	_preload
   869     0023  303C               	movlw	60
   870     0024  00AF               	movwf	_preload+1
   871     0025                     l2072:
   872                           
   873                           ;main.c: 41:     timer1_timermode(preload);
   874     0025  082E               	movf	_preload,w
   875     0026  120A  118A  275F  120A  118A  	fcall	_timer1_timermode
   876     002B                     l2074:
   877                           
   878                           ;main.c: 46:     TRISD0 = 1; TRISD1 = 1; TRISD2 = 1; TRISD3 = 1;
   879     002B  1683               	bsf	3,5	;RP0=1, select bank1
   880     002C  1303               	bcf	3,6	;RP1=0, select bank1
   881     002D  1408               	bsf	8,0	;volatile
   882     002E                     l2076:
   883     002E  1488               	bsf	8,1	;volatile
   884     002F                     l2078:
   885     002F  1508               	bsf	8,2	;volatile
   886     0030                     l2080:
   887     0030  1588               	bsf	8,3	;volatile
   888     0031                     l2082:
   889                           
   890                           ;main.c: 49:     uint16_t password = 0;
   891     0031  1283               	bcf	3,5	;RP0=0, select bank0
   892     0032  1303               	bcf	3,6	;RP1=0, select bank0
   893     0033  01A9               	clrf	main@password
   894     0034  01AA               	clrf	main@password+1
   895     0035                     l2084:
   896     0035                     l2086:
   897                           
   898                           ;main.c: 55:     LCD_INIT();
   899     0035  120A  118A  249C  120A  118A  	fcall	_LCD_INIT
   900     003A                     l2088:
   901                           
   902                           ;main.c: 56:     LCD_SHOW_CURSOR(1);
   903     003A  3001               	movlw	1
   904     003B  120A  118A  2741  120A  118A  	fcall	_LCD_SHOW_CURSOR
   905     0040                     l2090:
   906                           
   907                           ;main.c: 57:     if(EEPROM_Read(0) == 0xFF){
   908     0040  3000               	movlw	0
   909     0041  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
   910     0046  3AFF               	xorlw	255
   911     0047  1D03               	skipz
   912     0048  284A               	goto	u1431
   913     0049  284B               	goto	u1430
   914     004A                     u1431:
   915     004A  2896               	goto	l2110
   916     004B                     u1430:
   917     004B                     l2092:
   918                           
   919                           ;main.c: 58:         LCD_CLEAR();
   920     004B  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
   921                           
   922                           ;main.c: 59:         LCD_SET_CURSOR(1,1);
   923     0050  01F6               	clrf	LCD_SET_CURSOR@c
   924     0051  0AF6               	incf	LCD_SET_CURSOR@c,f
   925     0052  3001               	movlw	1
   926     0053  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
   927     0058                     l2094:
   928                           
   929                           ;main.c: 60:         LCD_WRITE_STRING("First Time?");
   930     0058  304A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   931     0059  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
   932     005E                     l2096:
   933                           
   934                           ;main.c: 61:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   935     005E  300B               	movlw	11
   936     005F  1283               	bcf	3,5	;RP0=0, select bank0
   937     0060  1303               	bcf	3,6	;RP1=0, select bank0
   938     0061  00A6               	movwf	??_main+2
   939     0062  3026               	movlw	38
   940     0063  00A5               	movwf	??_main+1
   941     0064  305D               	movlw	93
   942     0065  00A4               	movwf	??_main
   943     0066                     u1717:
   944     0066  0BA4               	decfsz	??_main,f
   945     0067  2866               	goto	u1717
   946     0068  0BA5               	decfsz	??_main+1,f
   947     0069  2866               	goto	u1717
   948     006A  0BA6               	decfsz	??_main+2,f
   949     006B  2866               	goto	u1717
   950     006C                     l2098:
   951                           
   952                           ;main.c: 62:         LCD_CLEAR();
   953     006C  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
   954     0071                     l2100:
   955                           
   956                           ;main.c: 63:         LCD_SET_CURSOR(1,1);
   957     0071  01F6               	clrf	LCD_SET_CURSOR@c
   958     0072  0AF6               	incf	LCD_SET_CURSOR@c,f
   959     0073  3001               	movlw	1
   960     0074  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
   961     0079                     l2102:
   962                           
   963                           ;main.c: 64:         LCD_WRITE_STRING("Set Pass!:");
   964     0079  306D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   965     007A  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
   966     007F                     l2104:
   967                           
   968                           ;main.c: 65:         LCD_SET_CURSOR(2,1);
   969     007F  01F6               	clrf	LCD_SET_CURSOR@c
   970     0080  0AF6               	incf	LCD_SET_CURSOR@c,f
   971     0081  3002               	movlw	2
   972     0082  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
   973     0087                     l2106:
   974                           
   975                           ;main.c: 66:         LCD_WRITE_STRING("4 digit pass");
   976     0087  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   977     0088  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
   978     008D                     l2108:
   979                           
   980                           ;main.c: 67:         LCD_SET_CURSOR(1,11);
   981     008D  300B               	movlw	11
   982     008E  00F6               	movwf	LCD_SET_CURSOR@c
   983     008F  3001               	movlw	1
   984     0090  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
   985                           
   986                           ;main.c: 68:     }
   987     0095  289B               	goto	l2112
   988     0096                     l2110:
   989     0096  120A  118A  266B  120A  118A  	fcall	_main_menu
   990     009B                     l2112:
   991                           
   992                           ;main.c: 73:         if(RD0)
   993     009B  1283               	bcf	3,5	;RP0=0, select bank0
   994     009C  1303               	bcf	3,6	;RP1=0, select bank0
   995     009D  1C08               	btfss	8,0	;volatile
   996     009E  28A0               	goto	u1441
   997     009F  28A1               	goto	u1440
   998     00A0                     u1441:
   999     00A0  296F               	goto	l2168
  1000     00A1                     u1440:
  1001     00A1                     l2114:
  1002                           
  1003                           ;main.c: 74:         {;main.c: 75:             if(EEPROM_Read(0) == 0xFF){
  1004     00A1  3000               	movlw	0
  1005     00A2  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1006     00A7  3AFF               	xorlw	255
  1007     00A8  1D03               	skipz
  1008     00A9  28AB               	goto	u1451
  1009     00AA  28AC               	goto	u1450
  1010     00AB                     u1451:
  1011     00AB  28E4               	goto	l2132
  1012     00AC                     u1450:
  1013     00AC                     l2116:
  1014                           
  1015                           ;main.c: 76:                 LCD_WRITE_CHAR('1');
  1016     00AC  3031               	movlw	49
  1017     00AD  120A  118A  2592  120A  118A  	fcall	_LCD_WRITE_CHAR
  1018     00B2                     l2118:
  1019                           
  1020                           ;main.c: 77:                 digits++;
  1021     00B2  3001               	movlw	1
  1022     00B3  00FF               	movwf	btemp+1
  1023     00B4  087F               	movf	btemp+1,w
  1024     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1025     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1026     00B7  07AD               	addwf	_digits,f
  1027     00B8                     l2120:
  1028                           
  1029                           ;main.c: 78:                 if(digits > 1) password = password * 10 + 1;
  1030     00B8  3002               	movlw	2
  1031     00B9  022D               	subwf	_digits,w
  1032     00BA  1C03               	skipc
  1033     00BB  28BD               	goto	u1461
  1034     00BC  28BE               	goto	u1460
  1035     00BD                     u1461:
  1036     00BD  28D6               	goto	l2124
  1037     00BE                     u1460:
  1038     00BE                     l2122:
  1039     00BE  082A               	movf	main@password+1,w
  1040     00BF  00F4               	movwf	___wmul@multiplier+1
  1041     00C0  0829               	movf	main@password,w
  1042     00C1  00F3               	movwf	___wmul@multiplier
  1043     00C2  300A               	movlw	10
  1044     00C3  00F5               	movwf	___wmul@multiplicand
  1045     00C4  3000               	movlw	0
  1046     00C5  00F6               	movwf	___wmul@multiplicand+1
  1047     00C6  120A  118A  26BD  120A  118A  	fcall	___wmul
  1048     00CB  0873               	movf	?___wmul,w
  1049     00CC  3E01               	addlw	1
  1050     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1051     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1052     00CF  00A9               	movwf	main@password
  1053     00D0  0874               	movf	?___wmul+1,w
  1054     00D1  1803               	skipnc
  1055     00D2  3E01               	addlw	1
  1056     00D3  3E00               	addlw	0
  1057     00D4  00AA               	movwf	main@password+1
  1058     00D5  28DA               	goto	l2126
  1059     00D6                     l2124:
  1060     00D6  3001               	movlw	1
  1061     00D7  00A9               	movwf	main@password
  1062     00D8  3000               	movlw	0
  1063     00D9  00AA               	movwf	main@password+1
  1064     00DA                     l2126:
  1065                           
  1066                           ;main.c: 80:                 if(digits == 4)
  1067     00DA  3004               	movlw	4
  1068     00DB  062D               	xorwf	_digits,w
  1069     00DC  1D03               	btfss	3,2
  1070     00DD  28DF               	goto	u1471
  1071     00DE  28E0               	goto	u1470
  1072     00DF                     u1471:
  1073     00DF  2961               	goto	l2166
  1074     00E0                     u1470:
  1075     00E0                     l2128:
  1076                           
  1077                           ;main.c: 81:                 {;main.c: 82:                     take_input = 2;
  1078     00E0  3002               	movlw	2
  1079     00E1  00AC               	movwf	_take_input
  1080     00E2                     l2130:
  1081                           
  1082                           ;main.c: 84:                     digits = 0;
  1083     00E2  01AD               	clrf	_digits
  1084     00E3  2961               	goto	l2166
  1085     00E4                     l2132:
  1086     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1087     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1088     00E6  082C               	movf	_take_input,w
  1089     00E7  1D03               	btfss	3,2
  1090     00E8  28EA               	goto	u1481
  1091     00E9  28EB               	goto	u1480
  1092     00EA                     u1481:
  1093     00EA  2927               	goto	l2148
  1094     00EB                     u1480:
  1095     00EB                     l2134:
  1096                           
  1097                           ;main.c: 88:                 screen = 1;
  1098     00EB  01AB               	clrf	_screen
  1099     00EC  0AAB               	incf	_screen,f
  1100                           
  1101                           ;main.c: 89:                 take_input = 1;
  1102     00ED  01AC               	clrf	_take_input
  1103     00EE  0AAC               	incf	_take_input,f
  1104     00EF                     l2136:
  1105                           
  1106                           ;main.c: 90:                 LCD_CLEAR();
  1107     00EF  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1108                           
  1109                           ;main.c: 91:                 LCD_SET_CURSOR(1,1);
  1110     00F4  01F6               	clrf	LCD_SET_CURSOR@c
  1111     00F5  0AF6               	incf	LCD_SET_CURSOR@c,f
  1112     00F6  3001               	movlw	1
  1113     00F7  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1114     00FC                     l2138:
  1115                           
  1116                           ;main.c: 92:                 LCD_WRITE_STRING("Pass:");
  1117     00FC  3087               	movlw	(low (((STR_6+4)-__stringbase)| (0+32768)))& (0+255)
  1118     00FD  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1119     0102                     l2140:
  1120                           
  1121                           ;main.c: 93:                 LCD_SET_CURSOR(2,1);
  1122     0102  01F6               	clrf	LCD_SET_CURSOR@c
  1123     0103  0AF6               	incf	LCD_SET_CURSOR@c,f
  1124     0104  3002               	movlw	2
  1125     0105  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1126                           
  1127                           ;main.c: 94:                 LCD_WRITE_STRING("*:Main menu");
  1128     010A  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1129     010B  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1130     0110                     l2142:
  1131                           
  1132                           ;main.c: 95:                 LCD_SET_CURSOR(1,6);
  1133     0110  3006               	movlw	6
  1134     0111  00F6               	movwf	LCD_SET_CURSOR@c
  1135     0112  3001               	movlw	1
  1136     0113  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1137     0118                     l2144:
  1138                           
  1139                           ;main.c: 96:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  1140     0118  3002               	movlw	2
  1141     0119  1283               	bcf	3,5	;RP0=0, select bank0
  1142     011A  1303               	bcf	3,6	;RP1=0, select bank0
  1143     011B  00A6               	movwf	??_main+2
  1144     011C  3045               	movlw	69
  1145     011D  00A5               	movwf	??_main+1
  1146     011E  30A9               	movlw	169
  1147     011F  00A4               	movwf	??_main
  1148     0120                     u1727:
  1149     0120  0BA4               	decfsz	??_main,f
  1150     0121  2920               	goto	u1727
  1151     0122  0BA5               	decfsz	??_main+1,f
  1152     0123  2920               	goto	u1727
  1153     0124  0BA6               	decfsz	??_main+2,f
  1154     0125  2920               	goto	u1727
  1155                           
  1156                           ;main.c: 97:                 goto start;
  1157     0126  289B               	goto	l2112
  1158     0127                     l2148:
  1159     0127  032C               	decf	_take_input,w
  1160     0128  1D03               	btfss	3,2
  1161     0129  292B               	goto	u1491
  1162     012A  292C               	goto	u1490
  1163     012B                     u1491:
  1164     012B  2961               	goto	l2166
  1165     012C                     u1490:
  1166     012C                     l2150:
  1167                           
  1168                           ;main.c: 101:                 LCD_WRITE_CHAR('1');
  1169     012C  3031               	movlw	49
  1170     012D  120A  118A  2592  120A  118A  	fcall	_LCD_WRITE_CHAR
  1171     0132                     l2152:
  1172                           
  1173                           ;main.c: 102:                 digits++;
  1174     0132  3001               	movlw	1
  1175     0133  00FF               	movwf	btemp+1
  1176     0134  087F               	movf	btemp+1,w
  1177     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0137  07AD               	addwf	_digits,f
  1180     0138                     l2154:
  1181                           
  1182                           ;main.c: 103:                 if(digits > 1) password = password * 10 + 1;
  1183     0138  3002               	movlw	2
  1184     0139  022D               	subwf	_digits,w
  1185     013A  1C03               	skipc
  1186     013B  293D               	goto	u1501
  1187     013C  293E               	goto	u1500
  1188     013D                     u1501:
  1189     013D  2956               	goto	l2158
  1190     013E                     u1500:
  1191     013E                     l2156:
  1192     013E  082A               	movf	main@password+1,w
  1193     013F  00F4               	movwf	___wmul@multiplier+1
  1194     0140  0829               	movf	main@password,w
  1195     0141  00F3               	movwf	___wmul@multiplier
  1196     0142  300A               	movlw	10
  1197     0143  00F5               	movwf	___wmul@multiplicand
  1198     0144  3000               	movlw	0
  1199     0145  00F6               	movwf	___wmul@multiplicand+1
  1200     0146  120A  118A  26BD  120A  118A  	fcall	___wmul
  1201     014B  0873               	movf	?___wmul,w
  1202     014C  3E01               	addlw	1
  1203     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1204     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1205     014F  00A9               	movwf	main@password
  1206     0150  0874               	movf	?___wmul+1,w
  1207     0151  1803               	skipnc
  1208     0152  3E01               	addlw	1
  1209     0153  3E00               	addlw	0
  1210     0154  00AA               	movwf	main@password+1
  1211     0155  295A               	goto	l2160
  1212     0156                     l2158:
  1213     0156  3001               	movlw	1
  1214     0157  00A9               	movwf	main@password
  1215     0158  3000               	movlw	0
  1216     0159  00AA               	movwf	main@password+1
  1217     015A                     l2160:
  1218                           
  1219                           ;main.c: 105:                 if(digits == 4)
  1220     015A  3004               	movlw	4
  1221     015B  062D               	xorwf	_digits,w
  1222     015C  1D03               	btfss	3,2
  1223     015D  295F               	goto	u1511
  1224     015E  2960               	goto	u1510
  1225     015F                     u1511:
  1226     015F  2961               	goto	l2166
  1227     0160                     u1510:
  1228     0160  28E0               	goto	l2128
  1229     0161                     l2166:
  1230                           
  1231                           ;main.c: 113:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1232     0161  3002               	movlw	2
  1233     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0164  00A6               	movwf	??_main+2
  1236     0165  3045               	movlw	69
  1237     0166  00A5               	movwf	??_main+1
  1238     0167  30A9               	movlw	169
  1239     0168  00A4               	movwf	??_main
  1240     0169                     u1737:
  1241     0169  0BA4               	decfsz	??_main,f
  1242     016A  2969               	goto	u1737
  1243     016B  0BA5               	decfsz	??_main+1,f
  1244     016C  2969               	goto	u1737
  1245     016D  0BA6               	decfsz	??_main+2,f
  1246     016E  2969               	goto	u1737
  1247     016F                     l2168:
  1248                           
  1249                           ;main.c: 115:         if(RD1)
  1250     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1251     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1252     0171  1C88               	btfss	8,1	;volatile
  1253     0172  2974               	goto	u1521
  1254     0173  2975               	goto	u1520
  1255     0174                     u1521:
  1256     0174  2A43               	goto	l2228
  1257     0175                     u1520:
  1258     0175                     l2170:
  1259                           
  1260                           ;main.c: 116:         {;main.c: 117:             if(EEPROM_Read(0) == 0xFF){
  1261     0175  3000               	movlw	0
  1262     0176  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1263     017B  3AFF               	xorlw	255
  1264     017C  1D03               	skipz
  1265     017D  297F               	goto	u1531
  1266     017E  2980               	goto	u1530
  1267     017F                     u1531:
  1268     017F  29B8               	goto	l2188
  1269     0180                     u1530:
  1270     0180                     l2172:
  1271                           
  1272                           ;main.c: 118:                 LCD_WRITE_CHAR('2');
  1273     0180  3032               	movlw	50
  1274     0181  120A  118A  2592  120A  118A  	fcall	_LCD_WRITE_CHAR
  1275     0186                     l2174:
  1276                           
  1277                           ;main.c: 119:                 digits++;
  1278     0186  3001               	movlw	1
  1279     0187  00FF               	movwf	btemp+1
  1280     0188  087F               	movf	btemp+1,w
  1281     0189  1283               	bcf	3,5	;RP0=0, select bank0
  1282     018A  1303               	bcf	3,6	;RP1=0, select bank0
  1283     018B  07AD               	addwf	_digits,f
  1284     018C                     l2176:
  1285                           
  1286                           ;main.c: 120:                 if(digits > 1) password = password * 10 + 2;
  1287     018C  3002               	movlw	2
  1288     018D  022D               	subwf	_digits,w
  1289     018E  1C03               	skipc
  1290     018F  2991               	goto	u1541
  1291     0190  2992               	goto	u1540
  1292     0191                     u1541:
  1293     0191  29AA               	goto	l2180
  1294     0192                     u1540:
  1295     0192                     l2178:
  1296     0192  082A               	movf	main@password+1,w
  1297     0193  00F4               	movwf	___wmul@multiplier+1
  1298     0194  0829               	movf	main@password,w
  1299     0195  00F3               	movwf	___wmul@multiplier
  1300     0196  300A               	movlw	10
  1301     0197  00F5               	movwf	___wmul@multiplicand
  1302     0198  3000               	movlw	0
  1303     0199  00F6               	movwf	___wmul@multiplicand+1
  1304     019A  120A  118A  26BD  120A  118A  	fcall	___wmul
  1305     019F  0873               	movf	?___wmul,w
  1306     01A0  3E02               	addlw	2
  1307     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1308     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1309     01A3  00A9               	movwf	main@password
  1310     01A4  0874               	movf	?___wmul+1,w
  1311     01A5  1803               	skipnc
  1312     01A6  3E01               	addlw	1
  1313     01A7  3E00               	addlw	0
  1314     01A8  00AA               	movwf	main@password+1
  1315     01A9  29AE               	goto	l2182
  1316     01AA                     l2180:
  1317     01AA  3002               	movlw	2
  1318     01AB  00A9               	movwf	main@password
  1319     01AC  3000               	movlw	0
  1320     01AD  00AA               	movwf	main@password+1
  1321     01AE                     l2182:
  1322                           
  1323                           ;main.c: 122:                 if(digits == 4)
  1324     01AE  3004               	movlw	4
  1325     01AF  062D               	xorwf	_digits,w
  1326     01B0  1D03               	btfss	3,2
  1327     01B1  29B3               	goto	u1551
  1328     01B2  29B4               	goto	u1550
  1329     01B3                     u1551:
  1330     01B3  2A35               	goto	l2226
  1331     01B4                     u1550:
  1332     01B4                     l2184:
  1333                           
  1334                           ;main.c: 123:                 {;main.c: 124:                     take_input = 2;
  1335     01B4  3002               	movlw	2
  1336     01B5  00AC               	movwf	_take_input
  1337     01B6                     l2186:
  1338                           
  1339                           ;main.c: 126:                     digits = 0;
  1340     01B6  01AD               	clrf	_digits
  1341     01B7  2A35               	goto	l2226
  1342     01B8                     l2188:
  1343     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1344     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1345     01BA  082C               	movf	_take_input,w
  1346     01BB  1D03               	btfss	3,2
  1347     01BC  29BE               	goto	u1561
  1348     01BD  29BF               	goto	u1560
  1349     01BE                     u1561:
  1350     01BE  29FB               	goto	l2208
  1351     01BF                     u1560:
  1352     01BF                     l2190:
  1353                           
  1354                           ;main.c: 130:                 screen = 2;
  1355     01BF  3002               	movlw	2
  1356     01C0  00AB               	movwf	_screen
  1357     01C1                     l2192:
  1358                           
  1359                           ;main.c: 131:                 take_input = 1;
  1360     01C1  01AC               	clrf	_take_input
  1361     01C2  0AAC               	incf	_take_input,f
  1362     01C3                     l2194:
  1363                           
  1364                           ;main.c: 132:                 LCD_CLEAR();
  1365     01C3  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1366     01C8                     l2196:
  1367                           
  1368                           ;main.c: 133:                 LCD_SET_CURSOR(1,1);
  1369     01C8  01F6               	clrf	LCD_SET_CURSOR@c
  1370     01C9  0AF6               	incf	LCD_SET_CURSOR@c,f
  1371     01CA  3001               	movlw	1
  1372     01CB  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1373     01D0                     l2198:
  1374                           
  1375                           ;main.c: 134:                 LCD_WRITE_STRING("Old Pass:");
  1376     01D0  3083               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1377     01D1  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1378     01D6                     l2200:
  1379                           
  1380                           ;main.c: 135:                 LCD_SET_CURSOR(2,1);
  1381     01D6  01F6               	clrf	LCD_SET_CURSOR@c
  1382     01D7  0AF6               	incf	LCD_SET_CURSOR@c,f
  1383     01D8  3002               	movlw	2
  1384     01D9  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1385     01DE                     l2202:
  1386                           
  1387                           ;main.c: 136:                 LCD_WRITE_STRING("New pass:");
  1388     01DE  308D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1389     01DF  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1390     01E4                     l2204:
  1391                           
  1392                           ;main.c: 137:                 LCD_SET_CURSOR(1,10);
  1393     01E4  300A               	movlw	10
  1394     01E5  00F6               	movwf	LCD_SET_CURSOR@c
  1395     01E6  3001               	movlw	1
  1396     01E7  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1397                           
  1398                           ;main.c: 138:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  1399     01EC  3002               	movlw	2
  1400     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1401     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1402     01EF  00A6               	movwf	??_main+2
  1403     01F0  3045               	movlw	69
  1404     01F1  00A5               	movwf	??_main+1
  1405     01F2  30A9               	movlw	169
  1406     01F3  00A4               	movwf	??_main
  1407     01F4                     u1747:
  1408     01F4  0BA4               	decfsz	??_main,f
  1409     01F5  29F4               	goto	u1747
  1410     01F6  0BA5               	decfsz	??_main+1,f
  1411     01F7  29F4               	goto	u1747
  1412     01F8  0BA6               	decfsz	??_main+2,f
  1413     01F9  29F4               	goto	u1747
  1414                           
  1415                           ;main.c: 139:                 goto start;
  1416     01FA  289B               	goto	l2112
  1417     01FB                     l2208:
  1418     01FB  032C               	decf	_take_input,w
  1419     01FC  1D03               	btfss	3,2
  1420     01FD  29FF               	goto	u1571
  1421     01FE  2A00               	goto	u1570
  1422     01FF                     u1571:
  1423     01FF  2A35               	goto	l2226
  1424     0200                     u1570:
  1425     0200                     l2210:
  1426                           
  1427                           ;main.c: 143:                 LCD_WRITE_CHAR('2');
  1428     0200  3032               	movlw	50
  1429     0201  120A  118A  2592  120A  118A  	fcall	_LCD_WRITE_CHAR
  1430     0206                     l2212:
  1431                           
  1432                           ;main.c: 144:                 digits++;
  1433     0206  3001               	movlw	1
  1434     0207  00FF               	movwf	btemp+1
  1435     0208  087F               	movf	btemp+1,w
  1436     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1437     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1438     020B  07AD               	addwf	_digits,f
  1439     020C                     l2214:
  1440                           
  1441                           ;main.c: 145:                 if(digits > 1) password = password * 10 + 2;
  1442     020C  3002               	movlw	2
  1443     020D  022D               	subwf	_digits,w
  1444     020E  1C03               	skipc
  1445     020F  2A11               	goto	u1581
  1446     0210  2A12               	goto	u1580
  1447     0211                     u1581:
  1448     0211  2A2A               	goto	l2218
  1449     0212                     u1580:
  1450     0212                     l2216:
  1451     0212  082A               	movf	main@password+1,w
  1452     0213  00F4               	movwf	___wmul@multiplier+1
  1453     0214  0829               	movf	main@password,w
  1454     0215  00F3               	movwf	___wmul@multiplier
  1455     0216  300A               	movlw	10
  1456     0217  00F5               	movwf	___wmul@multiplicand
  1457     0218  3000               	movlw	0
  1458     0219  00F6               	movwf	___wmul@multiplicand+1
  1459     021A  120A  118A  26BD  120A  118A  	fcall	___wmul
  1460     021F  0873               	movf	?___wmul,w
  1461     0220  3E02               	addlw	2
  1462     0221  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0222  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0223  00A9               	movwf	main@password
  1465     0224  0874               	movf	?___wmul+1,w
  1466     0225  1803               	skipnc
  1467     0226  3E01               	addlw	1
  1468     0227  3E00               	addlw	0
  1469     0228  00AA               	movwf	main@password+1
  1470     0229  2A2E               	goto	l2220
  1471     022A                     l2218:
  1472     022A  3002               	movlw	2
  1473     022B  00A9               	movwf	main@password
  1474     022C  3000               	movlw	0
  1475     022D  00AA               	movwf	main@password+1
  1476     022E                     l2220:
  1477                           
  1478                           ;main.c: 147:                 if(digits == 4)
  1479     022E  3004               	movlw	4
  1480     022F  062D               	xorwf	_digits,w
  1481     0230  1D03               	btfss	3,2
  1482     0231  2A33               	goto	u1591
  1483     0232  2A34               	goto	u1590
  1484     0233                     u1591:
  1485     0233  2A35               	goto	l2226
  1486     0234                     u1590:
  1487     0234  29B4               	goto	l2184
  1488     0235                     l2226:
  1489                           
  1490                           ;main.c: 154:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1491     0235  3002               	movlw	2
  1492     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1493     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1494     0238  00A6               	movwf	??_main+2
  1495     0239  3045               	movlw	69
  1496     023A  00A5               	movwf	??_main+1
  1497     023B  30A9               	movlw	169
  1498     023C  00A4               	movwf	??_main
  1499     023D                     u1757:
  1500     023D  0BA4               	decfsz	??_main,f
  1501     023E  2A3D               	goto	u1757
  1502     023F  0BA5               	decfsz	??_main+1,f
  1503     0240  2A3D               	goto	u1757
  1504     0241  0BA6               	decfsz	??_main+2,f
  1505     0242  2A3D               	goto	u1757
  1506     0243                     l2228:
  1507                           
  1508                           ;main.c: 156:         if(RD2)
  1509     0243  1283               	bcf	3,5	;RP0=0, select bank0
  1510     0244  1303               	bcf	3,6	;RP1=0, select bank0
  1511     0245  1D08               	btfss	8,2	;volatile
  1512     0246  2A48               	goto	u1601
  1513     0247  2A49               	goto	u1600
  1514     0248                     u1601:
  1515     0248  2A68               	goto	l2238
  1516     0249                     u1600:
  1517     0249                     l2230:
  1518                           
  1519                           ;main.c: 157:         {;main.c: 158:             if(EEPROM_Read(0) == 0xFF){}
  1520     0249  3000               	movlw	0
  1521     024A  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1522     024F  3AFF               	xorlw	255
  1523     0250  1D03               	skipz
  1524     0251  2A53               	goto	u1611
  1525     0252  2A54               	goto	u1610
  1526     0253                     u1611:
  1527     0253  2A55               	goto	l2234
  1528     0254                     u1610:
  1529     0254  2A5A               	goto	l2236
  1530     0255                     l2234:
  1531     0255  120A  118A  266B  120A  118A  	fcall	_main_menu
  1532     025A                     l2236:
  1533                           
  1534                           ;main.c: 160:             _delay((unsigned long)((250)*(4000000/4000.0)));
  1535     025A  3002               	movlw	2
  1536     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1537     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1538     025D  00A6               	movwf	??_main+2
  1539     025E  3045               	movlw	69
  1540     025F  00A5               	movwf	??_main+1
  1541     0260  30A9               	movlw	169
  1542     0261  00A4               	movwf	??_main
  1543     0262                     u1767:
  1544     0262  0BA4               	decfsz	??_main,f
  1545     0263  2A62               	goto	u1767
  1546     0264  0BA5               	decfsz	??_main+1,f
  1547     0265  2A62               	goto	u1767
  1548     0266  0BA6               	decfsz	??_main+2,f
  1549     0267  2A62               	goto	u1767
  1550     0268                     l2238:
  1551                           
  1552                           ;main.c: 162:         if(RD3)
  1553     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1554     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1555     026A  1D88               	btfss	8,3	;volatile
  1556     026B  2A6D               	goto	u1621
  1557     026C  2A6E               	goto	u1620
  1558     026D                     u1621:
  1559     026D  289B               	goto	l2112
  1560     026E                     u1620:
  1561     026E                     l2240:
  1562                           
  1563                           ;main.c: 163:         {;main.c: 164:             if(take_input == 2){
  1564     026E  3002               	movlw	2
  1565     026F  062C               	xorwf	_take_input,w
  1566     0270  1D03               	btfss	3,2
  1567     0271  2A73               	goto	u1631
  1568     0272  2A74               	goto	u1630
  1569     0273                     u1631:
  1570     0273  2918               	goto	l2144
  1571     0274                     u1630:
  1572     0274                     l2242:
  1573                           
  1574                           ;main.c: 165:                 if(EEPROM_Read(0) == 0xFF){
  1575     0274  3000               	movlw	0
  1576     0275  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1577     027A  3AFF               	xorlw	255
  1578     027B  1D03               	skipz
  1579     027C  2A7E               	goto	u1641
  1580     027D  2A7F               	goto	u1640
  1581     027E                     u1641:
  1582     027E  2ACF               	goto	l2254
  1583     027F                     u1640:
  1584     027F                     l2244:
  1585                           
  1586                           ;main.c: 166:                     EEPROM_Write(0,(password/100));
  1587     027F  3064               	movlw	100
  1588     0280  00F3               	movwf	___lwdiv@divisor
  1589     0281  3000               	movlw	0
  1590     0282  00F4               	movwf	___lwdiv@divisor+1
  1591     0283  1283               	bcf	3,5	;RP0=0, select bank0
  1592     0284  1303               	bcf	3,6	;RP1=0, select bank0
  1593     0285  082A               	movf	main@password+1,w
  1594     0286  00F6               	movwf	___lwdiv@dividend+1
  1595     0287  0829               	movf	main@password,w
  1596     0288  00F5               	movwf	___lwdiv@dividend
  1597     0289  120A  118A  254E  120A  118A  	fcall	___lwdiv
  1598     028E  0873               	movf	?___lwdiv,w
  1599     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1600     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1601     0291  00A0               	movwf	EEPROM_Write@data
  1602     0292  3000               	movlw	0
  1603     0293  120A  118A  263B  120A  118A  	fcall	_EEPROM_Write
  1604                           
  1605                           ;main.c: 167:                     EEPROM_Write(1,(password%100));
  1606     0298  3064               	movlw	100
  1607     0299  00F3               	movwf	___lwmod@divisor
  1608     029A  3000               	movlw	0
  1609     029B  00F4               	movwf	___lwmod@divisor+1
  1610     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1611     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1612     029E  082A               	movf	main@password+1,w
  1613     029F  00F6               	movwf	___lwmod@dividend+1
  1614     02A0  0829               	movf	main@password,w
  1615     02A1  00F5               	movwf	___lwmod@dividend
  1616     02A2  120A  118A  25CD  120A  118A  	fcall	___lwmod
  1617     02A7  0873               	movf	?___lwmod,w
  1618     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1619     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1620     02AA  00A0               	movwf	EEPROM_Write@data
  1621     02AB  3001               	movlw	1
  1622     02AC  120A  118A  263B  120A  118A  	fcall	_EEPROM_Write
  1623     02B1                     l2246:
  1624                           
  1625                           ;main.c: 168:                     LCD_CLEAR();
  1626     02B1  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1627     02B6                     l2248:
  1628                           
  1629                           ;main.c: 169:                     LCD_SET_CURSOR(1,5);
  1630     02B6  3005               	movlw	5
  1631     02B7  00F6               	movwf	LCD_SET_CURSOR@c
  1632     02B8  3001               	movlw	1
  1633     02B9  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1634     02BE                     l2250:
  1635                           
  1636                           ;main.c: 170:                     LCD_WRITE_STRING("Welcome :)"); blink();
  1637     02BE  3062               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1638     02BF  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1639     02C4                     l2252:
  1640     02C4  120A  118A  2607  120A  118A  	fcall	_blink
  1641                           
  1642                           ;main.c: 171:                     main_menu();
  1643     02C9  120A  118A  266B  120A  118A  	fcall	_main_menu
  1644                           
  1645                           ;main.c: 172:                     }
  1646     02CE  2918               	goto	l2144
  1647     02CF                     l2254:
  1648     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1649     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1650     02D1  032B               	decf	_screen,w
  1651     02D2  1D03               	btfss	3,2
  1652     02D3  2AD5               	goto	u1651
  1653     02D4  2AD6               	goto	u1650
  1654     02D5                     u1651:
  1655     02D5  2B43               	goto	l2280
  1656     02D6                     u1650:
  1657     02D6                     l2256:
  1658                           
  1659                           ;main.c: 174:                     check_input = EEPROM_Read(0);
  1660     02D6  3000               	movlw	0
  1661     02D7  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1662     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02DE  00A4               	movwf	??_main
  1665     02DF  01A5               	clrf	??_main+1
  1666     02E0  0824               	movf	??_main,w
  1667     02E1  00A7               	movwf	main@check_input
  1668     02E2  0825               	movf	??_main+1,w
  1669     02E3  00A8               	movwf	main@check_input+1
  1670     02E4                     l2258:
  1671                           
  1672                           ;main.c: 175:                     check_input *= 100;
  1673     02E4  3064               	movlw	100
  1674     02E5  00F3               	movwf	___wmul@multiplier
  1675     02E6  3000               	movlw	0
  1676     02E7  00F4               	movwf	___wmul@multiplier+1
  1677     02E8  0828               	movf	main@check_input+1,w
  1678     02E9  00F6               	movwf	___wmul@multiplicand+1
  1679     02EA  0827               	movf	main@check_input,w
  1680     02EB  00F5               	movwf	___wmul@multiplicand
  1681     02EC  120A  118A  26BD  120A  118A  	fcall	___wmul
  1682     02F1  0874               	movf	?___wmul+1,w
  1683     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1684     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1685     02F4  00A8               	movwf	main@check_input+1
  1686     02F5  0873               	movf	?___wmul,w
  1687     02F6  00A7               	movwf	main@check_input
  1688     02F7                     l2260:
  1689                           
  1690                           ;main.c: 176:                     check_input += EEPROM_Read(1);
  1691     02F7  3001               	movlw	1
  1692     02F8  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1693     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1694     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1695     02FF  00A4               	movwf	??_main
  1696     0300  01A5               	clrf	??_main+1
  1697     0301  0824               	movf	??_main,w
  1698     0302  07A7               	addwf	main@check_input,f
  1699     0303  1803               	skipnc
  1700     0304  0AA8               	incf	main@check_input+1,f
  1701     0305  0825               	movf	??_main+1,w
  1702     0306  07A8               	addwf	main@check_input+1,f
  1703     0307                     l2262:
  1704                           
  1705                           ;main.c: 177:                     if(check_input == password){
  1706     0307  082A               	movf	main@password+1,w
  1707     0308  0628               	xorwf	main@check_input+1,w
  1708     0309  1D03               	skipz
  1709     030A  2B0D               	goto	u1665
  1710     030B  0829               	movf	main@password,w
  1711     030C  0627               	xorwf	main@check_input,w
  1712     030D                     u1665:
  1713     030D  1D03               	skipz
  1714     030E  2B10               	goto	u1661
  1715     030F  2B11               	goto	u1660
  1716     0310                     u1661:
  1717     0310  2B2F               	goto	l2272
  1718     0311                     u1660:
  1719     0311                     l2264:
  1720                           
  1721                           ;main.c: 178:                         LCD_CLEAR();
  1722     0311  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1723                           
  1724                           ;main.c: 179:                         LCD_SET_CURSOR(1,5);
  1725     0316  3005               	movlw	5
  1726     0317  00F6               	movwf	LCD_SET_CURSOR@c
  1727     0318  3001               	movlw	1
  1728     0319  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1729     031E                     l2266:
  1730                           
  1731                           ;main.c: 180:                         LCD_WRITE_STRING("ACCESS GRANTED"); blink();
  1732     031E  3012               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1733     031F  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1734     0324                     l2268:
  1735     0324  120A  118A  2607  120A  118A  	fcall	_blink
  1736     0329                     l2270:
  1737                           
  1738                           ;main.c: 181:                         main_menu();
  1739     0329  120A  118A  266B  120A  118A  	fcall	_main_menu
  1740                           
  1741                           ;main.c: 182:                     }
  1742     032E  2918               	goto	l2144
  1743     032F                     l2272:
  1744                           
  1745                           ;main.c: 184:                         LCD_CLEAR();
  1746     032F  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1747                           
  1748                           ;main.c: 185:                         LCD_SET_CURSOR(1,5);
  1749     0334  3005               	movlw	5
  1750     0335  00F6               	movwf	LCD_SET_CURSOR@c
  1751     0336  3001               	movlw	1
  1752     0337  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1753     033C                     l2274:
  1754                           
  1755                           ;main.c: 186:                         LCD_WRITE_STRING("Pass Incorrect"); blink();
  1756     033C  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1757     033D  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1758     0342  2B24               	goto	l2268
  1759     0343                     l2280:
  1760     0343  3002               	movlw	2
  1761     0344  062B               	xorwf	_screen,w
  1762     0345  1D03               	btfss	3,2
  1763     0346  2B48               	goto	u1671
  1764     0347  2B49               	goto	u1670
  1765     0348                     u1671:
  1766     0348  2BF6               	goto	l111
  1767     0349                     u1670:
  1768     0349                     l2282:
  1769                           
  1770                           ;main.c: 191:                     if(line == 1){
  1771     0349  0330               	decf	_line,w
  1772     034A  1D03               	btfss	3,2
  1773     034B  2B4D               	goto	u1681
  1774     034C  2B4E               	goto	u1680
  1775     034D                     u1681:
  1776     034D  2BAC               	goto	l2310
  1777     034E                     u1680:
  1778     034E                     l2284:
  1779                           
  1780                           ;main.c: 192:                         check_input = EEPROM_Read(0);
  1781     034E  3000               	movlw	0
  1782     034F  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1783     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1784     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0356  00A4               	movwf	??_main
  1786     0357  01A5               	clrf	??_main+1
  1787     0358  0824               	movf	??_main,w
  1788     0359  00A7               	movwf	main@check_input
  1789     035A  0825               	movf	??_main+1,w
  1790     035B  00A8               	movwf	main@check_input+1
  1791     035C                     l2286:
  1792                           
  1793                           ;main.c: 193:                         check_input *= 100;
  1794     035C  3064               	movlw	100
  1795     035D  00F3               	movwf	___wmul@multiplier
  1796     035E  3000               	movlw	0
  1797     035F  00F4               	movwf	___wmul@multiplier+1
  1798     0360  0828               	movf	main@check_input+1,w
  1799     0361  00F6               	movwf	___wmul@multiplicand+1
  1800     0362  0827               	movf	main@check_input,w
  1801     0363  00F5               	movwf	___wmul@multiplicand
  1802     0364  120A  118A  26BD  120A  118A  	fcall	___wmul
  1803     0369  0874               	movf	?___wmul+1,w
  1804     036A  1283               	bcf	3,5	;RP0=0, select bank0
  1805     036B  1303               	bcf	3,6	;RP1=0, select bank0
  1806     036C  00A8               	movwf	main@check_input+1
  1807     036D  0873               	movf	?___wmul,w
  1808     036E  00A7               	movwf	main@check_input
  1809     036F                     l2288:
  1810                           
  1811                           ;main.c: 194:                         check_input += EEPROM_Read(1);
  1812     036F  3001               	movlw	1
  1813     0370  120A  118A  279C  120A  118A  	fcall	_EEPROM_Read
  1814     0375  1283               	bcf	3,5	;RP0=0, select bank0
  1815     0376  1303               	bcf	3,6	;RP1=0, select bank0
  1816     0377  00A4               	movwf	??_main
  1817     0378  01A5               	clrf	??_main+1
  1818     0379  0824               	movf	??_main,w
  1819     037A  07A7               	addwf	main@check_input,f
  1820     037B  1803               	skipnc
  1821     037C  0AA8               	incf	main@check_input+1,f
  1822     037D  0825               	movf	??_main+1,w
  1823     037E  07A8               	addwf	main@check_input+1,f
  1824     037F                     l2290:
  1825                           
  1826                           ;main.c: 195:                         if(check_input == password){
  1827     037F  082A               	movf	main@password+1,w
  1828     0380  0628               	xorwf	main@check_input+1,w
  1829     0381  1D03               	skipz
  1830     0382  2B85               	goto	u1695
  1831     0383  0829               	movf	main@password,w
  1832     0384  0627               	xorwf	main@check_input,w
  1833     0385                     u1695:
  1834     0385  1D03               	skipz
  1835     0386  2B88               	goto	u1691
  1836     0387  2B89               	goto	u1690
  1837     0388                     u1691:
  1838     0388  2B98               	goto	l2302
  1839     0389                     u1690:
  1840     0389                     l2292:
  1841                           
  1842                           ;main.c: 196:                             LCD_SET_CURSOR(2,10);
  1843     0389  300A               	movlw	10
  1844     038A  00F6               	movwf	LCD_SET_CURSOR@c
  1845     038B  3002               	movlw	2
  1846     038C  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1847     0391                     l2294:
  1848                           
  1849                           ;main.c: 197:                             line = 2;
  1850     0391  3002               	movlw	2
  1851     0392  1283               	bcf	3,5	;RP0=0, select bank0
  1852     0393  1303               	bcf	3,6	;RP1=0, select bank0
  1853     0394  00B0               	movwf	_line
  1854     0395                     l2296:
  1855                           
  1856                           ;main.c: 198:                             take_input = 1;
  1857     0395  01AC               	clrf	_take_input
  1858     0396  0AAC               	incf	_take_input,f
  1859     0397  2918               	goto	l2144
  1860     0398                     l2302:
  1861                           
  1862                           ;main.c: 203:                             LCD_CLEAR();
  1863     0398  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1864                           
  1865                           ;main.c: 204:                             LCD_SET_CURSOR(1,5);
  1866     039D  3005               	movlw	5
  1867     039E  00F6               	movwf	LCD_SET_CURSOR@c
  1868     039F  3001               	movlw	1
  1869     03A0  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1870     03A5                     l2304:
  1871                           
  1872                           ;main.c: 205:                             LCD_WRITE_STRING("Pass Incorrect"); blink();
  1873     03A5  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1874     03A6  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1875     03AB  2B24               	goto	l2268
  1876     03AC                     l2310:
  1877     03AC  3002               	movlw	2
  1878     03AD  0630               	xorwf	_line,w
  1879     03AE  1D03               	btfss	3,2
  1880     03AF  2BB1               	goto	u1701
  1881     03B0  2BB2               	goto	u1700
  1882     03B1                     u1701:
  1883     03B1  2BF6               	goto	l111
  1884     03B2                     u1700:
  1885     03B2                     l2312:
  1886                           
  1887                           ;main.c: 210:                         EEPROM_Write(0,(password/100));
  1888     03B2  3064               	movlw	100
  1889     03B3  00F3               	movwf	___lwdiv@divisor
  1890     03B4  3000               	movlw	0
  1891     03B5  00F4               	movwf	___lwdiv@divisor+1
  1892     03B6  082A               	movf	main@password+1,w
  1893     03B7  00F6               	movwf	___lwdiv@dividend+1
  1894     03B8  0829               	movf	main@password,w
  1895     03B9  00F5               	movwf	___lwdiv@dividend
  1896     03BA  120A  118A  254E  120A  118A  	fcall	___lwdiv
  1897     03BF  0873               	movf	?___lwdiv,w
  1898     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1899     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1900     03C2  00A0               	movwf	EEPROM_Write@data
  1901     03C3  3000               	movlw	0
  1902     03C4  120A  118A  263B  120A  118A  	fcall	_EEPROM_Write
  1903                           
  1904                           ;main.c: 211:                         EEPROM_Write(1,(password%100));
  1905     03C9  3064               	movlw	100
  1906     03CA  00F3               	movwf	___lwmod@divisor
  1907     03CB  3000               	movlw	0
  1908     03CC  00F4               	movwf	___lwmod@divisor+1
  1909     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1910     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1911     03CF  082A               	movf	main@password+1,w
  1912     03D0  00F6               	movwf	___lwmod@dividend+1
  1913     03D1  0829               	movf	main@password,w
  1914     03D2  00F5               	movwf	___lwmod@dividend
  1915     03D3  120A  118A  25CD  120A  118A  	fcall	___lwmod
  1916     03D8  0873               	movf	?___lwmod,w
  1917     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1918     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1919     03DB  00A0               	movwf	EEPROM_Write@data
  1920     03DC  3001               	movlw	1
  1921     03DD  120A  118A  263B  120A  118A  	fcall	_EEPROM_Write
  1922     03E2                     l2314:
  1923                           
  1924                           ;main.c: 212:                         LCD_CLEAR();
  1925     03E2  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  1926     03E7                     l2316:
  1927                           
  1928                           ;main.c: 213:                         LCD_SET_CURSOR(1,5);
  1929     03E7  3005               	movlw	5
  1930     03E8  00F6               	movwf	LCD_SET_CURSOR@c
  1931     03E9  3001               	movlw	1
  1932     03EA  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  1933     03EF                     l2318:
  1934                           
  1935                           ;main.c: 214:                         LCD_WRITE_STRING("Pass Changed"); blink();
  1936     03EF  3030               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1937     03F0  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1938     03F5  2AC4               	goto	l2252
  1939     03F6                     l111:
  1940     03F6  2918               	goto	l2144
  1941     03F7  120A  118A  280E   	ljmp	start
  1942     03FA                     __end_of_main:
  1943                           
  1944                           	psect	text1
  1945     075F                     __ptext1:	
  1946 ;; *************** function _timer1_timermode *****************
  1947 ;; Defined at:
  1948 ;;		line 248 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  preloaded       1    wreg     unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  preloaded       1    5[COMMON] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         1       0       0       0       0
  1964 ;;      Temps:          2       0       0       0       0
  1965 ;;      Totals:         3       0       0       0       0
  1966 ;;Total ram usage:        3 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976     075F                     _timer1_timermode:	
  1977                           ;psect for function _timer1_timermode
  1978                           
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _timer1_timermode: [wreg]
  1982                           ;timer1_timermode@preloaded stored from wreg
  1983     075F  00F5               	movwf	timer1_timermode@preloaded
  1984     0760                     l1424:
  1985                           
  1986                           ;main.c: 252:     TMR1CS = 0;
  1987     0760  1283               	bcf	3,5	;RP0=0, select bank0
  1988     0761  1303               	bcf	3,6	;RP1=0, select bank0
  1989     0762  1090               	bcf	16,1	;volatile
  1990                           
  1991                           ;main.c: 258:     T1CKPS0 = 0;
  1992     0763  1210               	bcf	16,4	;volatile
  1993                           
  1994                           ;main.c: 259:     T1CKPS1 = 0;
  1995     0764  1290               	bcf	16,5	;volatile
  1996     0765                     l1426:
  1997                           
  1998                           ;main.c: 261:     TMR1 = preloaded;
  1999     0765  0875               	movf	timer1_timermode@preloaded,w
  2000     0766  00F3               	movwf	??_timer1_timermode
  2001     0767  01F4               	clrf	??_timer1_timermode+1
  2002     0768  0873               	movf	??_timer1_timermode,w
  2003     0769  008E               	movwf	14	;volatile
  2004     076A  0874               	movf	??_timer1_timermode+1,w
  2005     076B  008F               	movwf	15	;volatile
  2006     076C                     l1428:
  2007                           
  2008                           ;main.c: 263:     TMR1IE = 1;
  2009     076C  1683               	bsf	3,5	;RP0=1, select bank1
  2010     076D  1303               	bcf	3,6	;RP1=0, select bank1
  2011     076E  140C               	bsf	12,0	;volatile
  2012     076F                     l1430:
  2013                           
  2014                           ;main.c: 264:     TMR1IF = 0;
  2015     076F  1283               	bcf	3,5	;RP0=0, select bank0
  2016     0770  1303               	bcf	3,6	;RP1=0, select bank0
  2017     0771  100C               	bcf	12,0	;volatile
  2018     0772                     l1432:
  2019                           
  2020                           ;main.c: 265:     GIE = 1;
  2021     0772  178B               	bsf	11,7	;volatile
  2022     0773                     l1434:
  2023                           
  2024                           ;main.c: 266:     PEIE = 1;
  2025     0773  170B               	bsf	11,6	;volatile
  2026     0774                     l1436:
  2027                           
  2028                           ;main.c: 270:     TMR1ON = 1;
  2029     0774  1410               	bsf	16,0	;volatile
  2030     0775                     l135:
  2031     0775  0008               	return
  2032     0776                     __end_of_timer1_timermode:
  2033                           
  2034                           	psect	text2
  2035     066B                     __ptext2:	
  2036 ;; *************** function _main_menu *****************
  2037 ;; Defined at:
  2038 ;;		line 227 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 4
  2059 ;; This function calls:
  2060 ;;		_LCD_CLEAR
  2061 ;;		_LCD_SET_CURSOR
  2062 ;;		_LCD_WRITE_STRING
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     066B                     _main_menu:	
  2069                           ;psect for function _main_menu
  2070                           
  2071     066B                     l2022:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _main_menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2074                           
  2075                           
  2076                           ;main.c: 228:     line = 1;
  2077     066B  1283               	bcf	3,5	;RP0=0, select bank0
  2078     066C  1303               	bcf	3,6	;RP1=0, select bank0
  2079     066D  01B0               	clrf	_line
  2080     066E  0AB0               	incf	_line,f
  2081     066F                     l2024:
  2082                           
  2083                           ;main.c: 229:     take_input = 0;
  2084     066F  01AC               	clrf	_take_input
  2085                           
  2086                           ;main.c: 230:     digits = 0;
  2087     0670  01AD               	clrf	_digits
  2088                           
  2089                           ;main.c: 231:     screen = 0;
  2090     0671  01AB               	clrf	_screen
  2091     0672                     l2026:
  2092                           
  2093                           ;main.c: 232:     LCD_CLEAR();
  2094     0672  120A  118A  278B  120A  118A  	fcall	_LCD_CLEAR
  2095     0677                     l2028:
  2096                           
  2097                           ;main.c: 233:     LCD_SET_CURSOR(1,1);
  2098     0677  01F6               	clrf	LCD_SET_CURSOR@c
  2099     0678  0AF6               	incf	LCD_SET_CURSOR@c,f
  2100     0679  3001               	movlw	1
  2101     067A  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  2102     067F                     l2030:
  2103                           
  2104                           ;main.c: 234:     LCD_WRITE_STRING("1:Enter Password");
  2105     067F  3001               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2106     0680  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  2107     0685                     l2032:
  2108                           
  2109                           ;main.c: 235:     LCD_SET_CURSOR(2,1);
  2110     0685  01F6               	clrf	LCD_SET_CURSOR@c
  2111     0686  0AF6               	incf	LCD_SET_CURSOR@c,f
  2112     0687  3002               	movlw	2
  2113     0688  120A  118A  24FD  120A  118A  	fcall	_LCD_SET_CURSOR
  2114     068D                     l2034:
  2115                           
  2116                           ;main.c: 236:     LCD_WRITE_STRING("2:New Pass");
  2117     068D  3078               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2118     068E  120A  118A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  2119     0693                     l127:
  2120     0693  0008               	return
  2121     0694                     __end_of_main_menu:
  2122                           
  2123                           	psect	text3
  2124     0694                     __ptext3:	
  2125 ;; *************** function _LCD_WRITE_STRING *****************
  2126 ;; Defined at:
  2127 ;;		line 73 in file "LCD.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  str             1    wreg     PTR unsigned char 
  2130 ;;		 -> STR_14(11), STR_13(17), STR_12(13), STR_11(15), 
  2131 ;;		 -> STR_10(15), STR_9(15), STR_8(11), STR_7(10), 
  2132 ;;		 -> STR_6(10), STR_5(12), STR_4(6), STR_3(13), 
  2133 ;;		 -> STR_2(11), STR_1(12), 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  str             1    2[BANK0 ] PTR unsigned char 
  2136 ;;		 -> STR_14(11), STR_13(17), STR_12(13), STR_11(15), 
  2137 ;;		 -> STR_10(15), STR_9(15), STR_8(11), STR_7(10), 
  2138 ;;		 -> STR_6(10), STR_5(12), STR_4(6), STR_3(13), 
  2139 ;;		 -> STR_2(11), STR_1(12), 
  2140 ;;  i               2    0[BANK0 ] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         0       3       0       0       0
  2152 ;;      Temps:          0       0       0       0       0
  2153 ;;      Totals:         0       3       0       0       0
  2154 ;;Total ram usage:        3 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 3
  2157 ;; This function calls:
  2158 ;;		_LCD_WRITE_CHAR
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;;		_main_menu
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165     0694                     _LCD_WRITE_STRING:	
  2166                           ;psect for function _LCD_WRITE_STRING
  2167                           
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2171                           ;LCD_WRITE_STRING@str stored from wreg
  2172     0694  1283               	bcf	3,5	;RP0=0, select bank0
  2173     0695  1303               	bcf	3,6	;RP1=0, select bank0
  2174     0696  00A2               	movwf	LCD_WRITE_STRING@str
  2175     0697                     l1958:
  2176                           
  2177                           ;LCD.c: 74:     for(int i = 0;str[i]!='\0';i++){
  2178     0697  01A0               	clrf	LCD_WRITE_STRING@i
  2179     0698  01A1               	clrf	LCD_WRITE_STRING@i+1
  2180     0699  2EAF               	goto	l1964
  2181     069A                     l1960:
  2182                           
  2183                           ;LCD.c: 75:         LCD_WRITE_CHAR(str[i]);
  2184     069A  0820               	movf	LCD_WRITE_STRING@i,w
  2185     069B  0722               	addwf	LCD_WRITE_STRING@str,w
  2186     069C  0084               	movwf	4
  2187     069D  120A  118A  2400  120A  118A  	fcall	stringdir
  2188     06A2  120A  118A  2592  120A  118A  	fcall	_LCD_WRITE_CHAR
  2189     06A7                     l1962:
  2190                           
  2191                           ;LCD.c: 76:     }
  2192     06A7  3001               	movlw	1
  2193     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2194     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2195     06AA  07A0               	addwf	LCD_WRITE_STRING@i,f
  2196     06AB  1803               	skipnc
  2197     06AC  0AA1               	incf	LCD_WRITE_STRING@i+1,f
  2198     06AD  3000               	movlw	0
  2199     06AE  07A1               	addwf	LCD_WRITE_STRING@i+1,f
  2200     06AF                     l1964:
  2201     06AF  0820               	movf	LCD_WRITE_STRING@i,w
  2202     06B0  0722               	addwf	LCD_WRITE_STRING@str,w
  2203     06B1  0084               	movwf	4
  2204     06B2  120A  118A  2400  120A  118A  	fcall	stringdir
  2205     06B7  3A00               	xorlw	0
  2206     06B8  1D03               	skipz
  2207     06B9  2EBB               	goto	u1361
  2208     06BA  2EBC               	goto	u1360
  2209     06BB                     u1361:
  2210     06BB  2E9A               	goto	l1960
  2211     06BC                     u1360:
  2212     06BC                     l188:
  2213     06BC  0008               	return
  2214     06BD                     __end_of_LCD_WRITE_STRING:
  2215                           
  2216                           	psect	text4
  2217     0592                     __ptext4:	
  2218 ;; *************** function _LCD_WRITE_CHAR *****************
  2219 ;; Defined at:
  2220 ;;		line 57 in file "LCD.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  data            1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  data            1    7[COMMON] unsigned char 
  2225 ;;  high4           1    6[COMMON] unsigned char 
  2226 ;;  low4            1    5[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         3       0       0       0       0
  2238 ;;      Temps:          1       0       0       0       0
  2239 ;;      Totals:         4       0       0       0       0
  2240 ;;Total ram usage:        4 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 2
  2243 ;; This function calls:
  2244 ;;		_LCD_DATA_4BIT
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;;		_LCD_WRITE_STRING
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0592                     _LCD_WRITE_CHAR:	
  2252                           ;psect for function _LCD_WRITE_CHAR
  2253                           
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _LCD_WRITE_CHAR: [wreg+status,2+status,0+pclath+cstack]
  2257                           ;LCD_WRITE_CHAR@data stored from wreg
  2258     0592  00F7               	movwf	LCD_WRITE_CHAR@data
  2259     0593                     l1898:
  2260                           
  2261                           ;LCD.c: 58:     char low4,high4;;LCD.c: 59:     low4 = data & 0x0F;
  2262     0593  0877               	movf	LCD_WRITE_CHAR@data,w
  2263     0594  390F               	andlw	15
  2264     0595  00F5               	movwf	LCD_WRITE_CHAR@low4
  2265                           
  2266                           ;LCD.c: 60:     high4 = data & 0xF0;
  2267     0596  0877               	movf	LCD_WRITE_CHAR@data,w
  2268     0597  39F0               	andlw	240
  2269     0598  00F6               	movwf	LCD_WRITE_CHAR@high4
  2270     0599                     l1900:
  2271                           
  2272                           ;LCD.c: 61:     RB4 = 1;
  2273     0599  1283               	bcf	3,5	;RP0=0, select bank0
  2274     059A  1303               	bcf	3,6	;RP1=0, select bank0
  2275     059B  1606               	bsf	6,4	;volatile
  2276     059C                     l1902:
  2277                           
  2278                           ;LCD.c: 62:     LCD_DATA_4BIT(high4>>4);
  2279     059C  0876               	movf	LCD_WRITE_CHAR@high4,w
  2280     059D  00F4               	movwf	??_LCD_WRITE_CHAR
  2281     059E  3004               	movlw	4
  2282     059F                     u1315:
  2283     059F  1003               	clrc
  2284     05A0  0CF4               	rrf	??_LCD_WRITE_CHAR,f
  2285     05A1  3EFF               	addlw	-1
  2286     05A2  1D03               	skipz
  2287     05A3  2D9F               	goto	u1315
  2288     05A4  0874               	movf	??_LCD_WRITE_CHAR,w
  2289     05A5  120A  118A  26E2  120A  118A  	fcall	_LCD_DATA_4BIT
  2290     05AA                     l1904:
  2291                           
  2292                           ;LCD.c: 63:     RB5 = 1;
  2293     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2294     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2295     05AC  1686               	bsf	6,5	;volatile
  2296     05AD                     l1906:
  2297                           
  2298                           ;LCD.c: 64:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  2299     05AD  3053               	movlw	83
  2300     05AE  00F4               	movwf	??_LCD_WRITE_CHAR
  2301     05AF                     u1777:
  2302     05AF  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  2303     05B0  2DAF               	goto	u1777
  2304     05B1                     l1908:
  2305                           
  2306                           ;LCD.c: 65:     RB5 = 0;
  2307     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2308     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2309     05B3  1286               	bcf	6,5	;volatile
  2310     05B4                     l1910:
  2311                           
  2312                           ;LCD.c: 66:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  2313     05B4  3053               	movlw	83
  2314     05B5  00F4               	movwf	??_LCD_WRITE_CHAR
  2315     05B6                     u1787:
  2316     05B6  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  2317     05B7  2DB6               	goto	u1787
  2318     05B8                     l1912:
  2319                           
  2320                           ;LCD.c: 67:     LCD_DATA_4BIT(low4);
  2321     05B8  0875               	movf	LCD_WRITE_CHAR@low4,w
  2322     05B9  120A  118A  26E2  120A  118A  	fcall	_LCD_DATA_4BIT
  2323     05BE                     l1914:
  2324                           
  2325                           ;LCD.c: 68:     RB5 = 1;
  2326     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2327     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2328     05C0  1686               	bsf	6,5	;volatile
  2329     05C1                     l1916:
  2330                           
  2331                           ;LCD.c: 69:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  2332     05C1  3053               	movlw	83
  2333     05C2  00F4               	movwf	??_LCD_WRITE_CHAR
  2334     05C3                     u1797:
  2335     05C3  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  2336     05C4  2DC3               	goto	u1797
  2337     05C5                     l1918:
  2338                           
  2339                           ;LCD.c: 70:     RB5 = 0;
  2340     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2341     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2342     05C7  1286               	bcf	6,5	;volatile
  2343     05C8                     l1920:
  2344                           
  2345                           ;LCD.c: 71:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  2346     05C8  3053               	movlw	83
  2347     05C9  00F4               	movwf	??_LCD_WRITE_CHAR
  2348     05CA                     u1807:
  2349     05CA  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  2350     05CB  2DCA               	goto	u1807
  2351     05CC                     l182:
  2352     05CC  0008               	return
  2353     05CD                     __end_of_LCD_WRITE_CHAR:
  2354                           
  2355                           	psect	text5
  2356     04FD                     __ptext5:	
  2357 ;; *************** function _LCD_SET_CURSOR *****************
  2358 ;; Defined at:
  2359 ;;		line 131 in file "LCD.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  r               1    wreg     unsigned char 
  2362 ;;  c               1    6[COMMON] unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  r               1    0[BANK0 ] unsigned char 
  2365 ;;  temp            1    3[BANK0 ] unsigned char 
  2366 ;;  low4            1    2[BANK0 ] unsigned char 
  2367 ;;  high4           1    1[BANK0 ] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, pclath, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2377 ;;      Params:         1       0       0       0       0
  2378 ;;      Locals:         0       4       0       0       0
  2379 ;;      Temps:          1       0       0       0       0
  2380 ;;      Totals:         2       4       0       0       0
  2381 ;;Total ram usage:        6 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 3
  2384 ;; This function calls:
  2385 ;;		_LCD_CMD
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;;		_main_menu
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392     04FD                     _LCD_SET_CURSOR:	
  2393                           ;psect for function _LCD_SET_CURSOR
  2394                           
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  2398                           ;LCD_SET_CURSOR@r stored from wreg
  2399     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2400     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2401     04FF  00A0               	movwf	LCD_SET_CURSOR@r
  2402     0500                     l1936:
  2403                           
  2404                           ;LCD.c: 132:     unsigned char high4,low4,temp;;LCD.c: 133:     if(r == 1){
  2405     0500  0320               	decf	LCD_SET_CURSOR@r,w
  2406     0501  1D03               	btfss	3,2
  2407     0502  2D04               	goto	u1321
  2408     0503  2D05               	goto	u1320
  2409     0504                     u1321:
  2410     0504  2D23               	goto	l1946
  2411     0505                     u1320:
  2412     0505                     l1938:
  2413                           
  2414                           ;LCD.c: 134:         temp = 0x80 + c - 1;
  2415     0505  0876               	movf	LCD_SET_CURSOR@c,w
  2416     0506  3E7F               	addlw	127
  2417     0507  00A3               	movwf	LCD_SET_CURSOR@temp
  2418                           
  2419                           ;LCD.c: 135:         high4 = temp>>4;
  2420     0508  0823               	movf	LCD_SET_CURSOR@temp,w
  2421     0509  00F7               	movwf	??_LCD_SET_CURSOR
  2422     050A  3004               	movlw	4
  2423     050B                     u1335:
  2424     050B  1003               	clrc
  2425     050C  0CF7               	rrf	??_LCD_SET_CURSOR,f
  2426     050D  3EFF               	addlw	-1
  2427     050E  1D03               	skipz
  2428     050F  2D0B               	goto	u1335
  2429     0510  0877               	movf	??_LCD_SET_CURSOR,w
  2430     0511  00A1               	movwf	LCD_SET_CURSOR@high4
  2431     0512                     l1940:
  2432                           
  2433                           ;LCD.c: 136:         low4 = temp & 0x0F;
  2434     0512  0823               	movf	LCD_SET_CURSOR@temp,w
  2435     0513  390F               	andlw	15
  2436     0514  00A2               	movwf	LCD_SET_CURSOR@low4
  2437     0515                     l1942:
  2438                           
  2439                           ;LCD.c: 137:         LCD_CMD(high4);
  2440     0515  0821               	movf	LCD_SET_CURSOR@high4,w
  2441     0516  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2442     051B                     l1944:
  2443                           
  2444                           ;LCD.c: 138:         LCD_CMD(low4);
  2445     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2446     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2447     051D  0822               	movf	LCD_SET_CURSOR@low4,w
  2448     051E  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2449     0523                     l1946:
  2450                           
  2451                           ;LCD.c: 140:     if(r == 2){
  2452     0523  3002               	movlw	2
  2453     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2454     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2455     0526  0620               	xorwf	LCD_SET_CURSOR@r,w
  2456     0527  1D03               	btfss	3,2
  2457     0528  2D2A               	goto	u1341
  2458     0529  2D2B               	goto	u1340
  2459     052A                     u1341:
  2460     052A  2D49               	goto	l1956
  2461     052B                     u1340:
  2462     052B                     l1948:
  2463                           
  2464                           ;LCD.c: 141:         temp = 0xC0 + c - 1;
  2465     052B  0876               	movf	LCD_SET_CURSOR@c,w
  2466     052C  3EBF               	addlw	191
  2467     052D  00A3               	movwf	LCD_SET_CURSOR@temp
  2468                           
  2469                           ;LCD.c: 142:         high4 = temp>>4;
  2470     052E  0823               	movf	LCD_SET_CURSOR@temp,w
  2471     052F  00F7               	movwf	??_LCD_SET_CURSOR
  2472     0530  3004               	movlw	4
  2473     0531                     u1355:
  2474     0531  1003               	clrc
  2475     0532  0CF7               	rrf	??_LCD_SET_CURSOR,f
  2476     0533  3EFF               	addlw	-1
  2477     0534  1D03               	skipz
  2478     0535  2D31               	goto	u1355
  2479     0536  0877               	movf	??_LCD_SET_CURSOR,w
  2480     0537  00A1               	movwf	LCD_SET_CURSOR@high4
  2481     0538                     l1950:
  2482                           
  2483                           ;LCD.c: 143:         low4 = temp & 0x0F;
  2484     0538  0823               	movf	LCD_SET_CURSOR@temp,w
  2485     0539  390F               	andlw	15
  2486     053A  00A2               	movwf	LCD_SET_CURSOR@low4
  2487     053B                     l1952:
  2488                           
  2489                           ;LCD.c: 144:         LCD_CMD(high4);
  2490     053B  0821               	movf	LCD_SET_CURSOR@high4,w
  2491     053C  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2492     0541                     l1954:
  2493                           
  2494                           ;LCD.c: 145:         LCD_CMD(low4);
  2495     0541  1283               	bcf	3,5	;RP0=0, select bank0
  2496     0542  1303               	bcf	3,6	;RP1=0, select bank0
  2497     0543  0822               	movf	LCD_SET_CURSOR@low4,w
  2498     0544  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2499     0549                     l1956:
  2500                           
  2501                           ;LCD.c: 147:     _delay((unsigned long)((37)*(4000000/4000000.0)));
  2502     0549  300C               	movlw	12
  2503     054A  00F7               	movwf	??_LCD_SET_CURSOR
  2504     054B                     u1817:
  2505     054B  0BF7               	decfsz	??_LCD_SET_CURSOR,f
  2506     054C  2D4B               	goto	u1817
  2507     054D                     l221:
  2508     054D  0008               	return
  2509     054E                     __end_of_LCD_SET_CURSOR:
  2510                           
  2511                           	psect	text6
  2512     078B                     __ptext6:	
  2513 ;; *************** function _LCD_CLEAR *****************
  2514 ;; Defined at:
  2515 ;;		line 80 in file "LCD.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0
  2532 ;;      Totals:         1       0       0       0       0
  2533 ;;Total ram usage:        1 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 3
  2536 ;; This function calls:
  2537 ;;		_LCD_CMD
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;;		_main_menu
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544     078B                     _LCD_CLEAR:	
  2545                           ;psect for function _LCD_CLEAR
  2546                           
  2547     078B                     l1932:	
  2548                           ;incstack = 0
  2549                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+pclath+cstack]
  2550                           
  2551                           
  2552                           ;LCD.c: 81:     LCD_CMD(0x00);
  2553     078B  3000               	movlw	0
  2554     078C  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2555                           
  2556                           ;LCD.c: 82:     LCD_CMD(0x01);
  2557     0791  3001               	movlw	1
  2558     0792  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2559     0797                     l1934:
  2560                           
  2561                           ;LCD.c: 83:     _delay((unsigned long)((82)*(4000000/4000000.0)));
  2562     0797  301B               	movlw	27
  2563     0798  00F6               	movwf	??_LCD_CLEAR
  2564     0799                     u1827:
  2565     0799  0BF6               	decfsz	??_LCD_CLEAR,f
  2566     079A  2F99               	goto	u1827
  2567     079B                     l191:
  2568     079B  0008               	return
  2569     079C                     __end_of_LCD_CLEAR:
  2570                           
  2571                           	psect	text7
  2572     0607                     __ptext7:	
  2573 ;; *************** function _blink *****************
  2574 ;; Defined at:
  2575 ;;		line 238 in file "main.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  i               1    8[COMMON] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0
  2591 ;;      Temps:          0       3       0       0       0
  2592 ;;      Totals:         1       3       0       0       0
  2593 ;;Total ram usage:        4 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 4
  2596 ;; This function calls:
  2597 ;;		_LCD_DISPLAY
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603     0607                     _blink:	
  2604                           ;psect for function _blink
  2605                           
  2606     0607                     l2054:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _blink: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2609                           
  2610                           
  2611                           ;main.c: 239:     for(uint8_t i = 0; i < 4; i++)
  2612     0607  01F8               	clrf	blink@i
  2613     0608                     l2060:
  2614                           
  2615                           ;main.c: 240:         {;main.c: 241:         LCD_DISPLAY(0);
  2616     0608  3000               	movlw	0
  2617     0609  120A  118A  2723  120A  118A  	fcall	_LCD_DISPLAY
  2618     060E                     l2062:
  2619                           
  2620                           ;main.c: 242:          _delay((unsigned long)((250)*(4000000/4000.0)));
  2621     060E  3002               	movlw	2
  2622     060F  1283               	bcf	3,5	;RP0=0, select bank0
  2623     0610  1303               	bcf	3,6	;RP1=0, select bank0
  2624     0611  00A2               	movwf	??_blink+2
  2625     0612  3045               	movlw	69
  2626     0613  00A1               	movwf	??_blink+1
  2627     0614  30A9               	movlw	169
  2628     0615  00A0               	movwf	??_blink
  2629     0616                     u1837:
  2630     0616  0BA0               	decfsz	??_blink,f
  2631     0617  2E16               	goto	u1837
  2632     0618  0BA1               	decfsz	??_blink+1,f
  2633     0619  2E16               	goto	u1837
  2634     061A  0BA2               	decfsz	??_blink+2,f
  2635     061B  2E16               	goto	u1837
  2636     061C                     l2064:
  2637                           
  2638                           ;main.c: 243:         LCD_DISPLAY(1);
  2639     061C  3001               	movlw	1
  2640     061D  120A  118A  2723  120A  118A  	fcall	_LCD_DISPLAY
  2641                           
  2642                           ;main.c: 244:         _delay((unsigned long)((250)*(4000000/4000.0)));
  2643     0622  3002               	movlw	2
  2644     0623  1283               	bcf	3,5	;RP0=0, select bank0
  2645     0624  1303               	bcf	3,6	;RP1=0, select bank0
  2646     0625  00A2               	movwf	??_blink+2
  2647     0626  3045               	movlw	69
  2648     0627  00A1               	movwf	??_blink+1
  2649     0628  30A9               	movlw	169
  2650     0629  00A0               	movwf	??_blink
  2651     062A                     u1847:
  2652     062A  0BA0               	decfsz	??_blink,f
  2653     062B  2E2A               	goto	u1847
  2654     062C  0BA1               	decfsz	??_blink+1,f
  2655     062D  2E2A               	goto	u1847
  2656     062E  0BA2               	decfsz	??_blink+2,f
  2657     062F  2E2A               	goto	u1847
  2658     0630                     l2066:
  2659                           
  2660                           ;main.c: 245:         }
  2661     0630  3001               	movlw	1
  2662     0631  00FF               	movwf	btemp+1
  2663     0632  087F               	movf	btemp+1,w
  2664     0633  07F8               	addwf	blink@i,f
  2665     0634                     l2068:
  2666     0634  3004               	movlw	4
  2667     0635  0278               	subwf	blink@i,w
  2668     0636  1C03               	skipc
  2669     0637  2E39               	goto	u1421
  2670     0638  2E3A               	goto	u1420
  2671     0639                     u1421:
  2672     0639  2E08               	goto	l2060
  2673     063A                     u1420:
  2674     063A                     l132:
  2675     063A  0008               	return
  2676     063B                     __end_of_blink:
  2677                           
  2678                           	psect	text8
  2679     0723                     __ptext8:	
  2680 ;; *************** function _LCD_DISPLAY *****************
  2681 ;; Defined at:
  2682 ;;		line 87 in file "LCD.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  state           1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  state           1    7[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         1       0       0       0       0
  2698 ;;      Temps:          1       0       0       0       0
  2699 ;;      Totals:         2       0       0       0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 3
  2703 ;; This function calls:
  2704 ;;		_LCD_CMD
  2705 ;; This function is called by:
  2706 ;;		_blink
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710     0723                     _LCD_DISPLAY:	
  2711                           ;psect for function _LCD_DISPLAY
  2712                           
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _LCD_DISPLAY: [wreg+status,2+status,0+pclath+cstack]
  2716                           ;LCD_DISPLAY@state stored from wreg
  2717     0723  00F7               	movwf	LCD_DISPLAY@state
  2718     0724                     l1966:
  2719                           
  2720                           ;LCD.c: 88:     LCD_CMD(0);
  2721     0724  3000               	movlw	0
  2722     0725  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2723     072A                     l1968:
  2724                           
  2725                           ;LCD.c: 89:     if(state == 1) LCD_CMD(0x0C);
  2726     072A  0377               	decf	LCD_DISPLAY@state,w
  2727     072B  1D03               	btfss	3,2
  2728     072C  2F2E               	goto	u1371
  2729     072D  2F2F               	goto	u1370
  2730     072E                     u1371:
  2731     072E  2F36               	goto	l1972
  2732     072F                     u1370:
  2733     072F                     l1970:
  2734     072F  300C               	movlw	12
  2735     0730  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2736     0735  2F3C               	goto	l1974
  2737     0736                     l1972:
  2738     0736  3008               	movlw	8
  2739     0737  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  2740     073C                     l1974:
  2741                           
  2742                           ;LCD.c: 91:     _delay((unsigned long)((37)*(4000000/4000000.0)));
  2743     073C  300C               	movlw	12
  2744     073D  00F6               	movwf	??_LCD_DISPLAY
  2745     073E                     u1857:
  2746     073E  0BF6               	decfsz	??_LCD_DISPLAY,f
  2747     073F  2F3E               	goto	u1857
  2748     0740                     l196:
  2749     0740  0008               	return
  2750     0741                     __end_of_LCD_DISPLAY:
  2751                           
  2752                           	psect	text9
  2753     06BD                     __ptext9:	
  2754 ;; *************** function ___wmul *****************
  2755 ;; Defined at:
  2756 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  multiplier      2    3[COMMON] unsigned int 
  2759 ;;  multiplicand    2    5[COMMON] unsigned int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  product         2    7[COMMON] unsigned int 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2    3[COMMON] unsigned int 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         4       0       0       0       0
  2772 ;;      Locals:         2       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0
  2774 ;;      Totals:         6       0       0       0       0
  2775 ;;Total ram usage:        6 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785     06BD                     ___wmul:	
  2786                           ;psect for function ___wmul
  2787                           
  2788     06BD                     l1540:	
  2789                           ;incstack = 0
  2790                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2791                           
  2792     06BD  01F7               	clrf	___wmul@product
  2793     06BE  01F8               	clrf	___wmul@product+1
  2794     06BF                     l1542:
  2795     06BF  1C73               	btfss	___wmul@multiplier,0
  2796     06C0  2EC2               	goto	u801
  2797     06C1  2EC3               	goto	u800
  2798     06C2                     u801:
  2799     06C2  2EC9               	goto	l326
  2800     06C3                     u800:
  2801     06C3                     l1544:
  2802     06C3  0875               	movf	___wmul@multiplicand,w
  2803     06C4  07F7               	addwf	___wmul@product,f
  2804     06C5  1803               	skipnc
  2805     06C6  0AF8               	incf	___wmul@product+1,f
  2806     06C7  0876               	movf	___wmul@multiplicand+1,w
  2807     06C8  07F8               	addwf	___wmul@product+1,f
  2808     06C9                     l326:
  2809     06C9  3001               	movlw	1
  2810     06CA                     u815:
  2811     06CA  1003               	clrc
  2812     06CB  0DF5               	rlf	___wmul@multiplicand,f
  2813     06CC  0DF6               	rlf	___wmul@multiplicand+1,f
  2814     06CD  3EFF               	addlw	-1
  2815     06CE  1D03               	skipz
  2816     06CF  2ECA               	goto	u815
  2817     06D0                     l1546:
  2818     06D0  3001               	movlw	1
  2819     06D1                     u825:
  2820     06D1  1003               	clrc
  2821     06D2  0CF4               	rrf	___wmul@multiplier+1,f
  2822     06D3  0CF3               	rrf	___wmul@multiplier,f
  2823     06D4  3EFF               	addlw	-1
  2824     06D5  1D03               	skipz
  2825     06D6  2ED1               	goto	u825
  2826     06D7                     l1548:
  2827     06D7  0873               	movf	___wmul@multiplier,w
  2828     06D8  0474               	iorwf	___wmul@multiplier+1,w
  2829     06D9  1D03               	btfss	3,2
  2830     06DA  2EDC               	goto	u831
  2831     06DB  2EDD               	goto	u830
  2832     06DC                     u831:
  2833     06DC  2EBF               	goto	l1542
  2834     06DD                     u830:
  2835     06DD                     l1550:
  2836     06DD  0878               	movf	___wmul@product+1,w
  2837     06DE  00F4               	movwf	?___wmul+1
  2838     06DF  0877               	movf	___wmul@product,w
  2839     06E0  00F3               	movwf	?___wmul
  2840     06E1                     l328:
  2841     06E1  0008               	return
  2842     06E2                     __end_of___wmul:
  2843                           
  2844                           	psect	text10
  2845     05CD                     __ptext10:	
  2846 ;; *************** function ___lwmod *****************
  2847 ;; Defined at:
  2848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  divisor         2    3[COMMON] unsigned int 
  2851 ;;  dividend        2    5[COMMON] unsigned int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  counter         1    7[COMMON] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2    3[COMMON] unsigned int 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, btemp+1
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         4       0       0       0       0
  2864 ;;      Locals:         1       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0
  2866 ;;      Totals:         5       0       0       0       0
  2867 ;;Total ram usage:        5 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877     05CD                     ___lwmod:	
  2878                           ;psect for function ___lwmod
  2879                           
  2880     05CD                     l1580:	
  2881                           ;incstack = 0
  2882                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2883                           
  2884     05CD  0873               	movf	___lwmod@divisor,w
  2885     05CE  0474               	iorwf	___lwmod@divisor+1,w
  2886     05CF  1903               	btfsc	3,2
  2887     05D0  2DD2               	goto	u911
  2888     05D1  2DD3               	goto	u910
  2889     05D2                     u911:
  2890     05D2  2E02               	goto	l1598
  2891     05D3                     u910:
  2892     05D3                     l1582:
  2893     05D3  01F7               	clrf	___lwmod@counter
  2894     05D4  0AF7               	incf	___lwmod@counter,f
  2895     05D5  2DE1               	goto	l1588
  2896     05D6                     l1584:
  2897     05D6  3001               	movlw	1
  2898     05D7                     u925:
  2899     05D7  1003               	clrc
  2900     05D8  0DF3               	rlf	___lwmod@divisor,f
  2901     05D9  0DF4               	rlf	___lwmod@divisor+1,f
  2902     05DA  3EFF               	addlw	-1
  2903     05DB  1D03               	skipz
  2904     05DC  2DD7               	goto	u925
  2905     05DD                     l1586:
  2906     05DD  3001               	movlw	1
  2907     05DE  00FF               	movwf	btemp+1
  2908     05DF  087F               	movf	btemp+1,w
  2909     05E0  07F7               	addwf	___lwmod@counter,f
  2910     05E1                     l1588:
  2911     05E1  1FF4               	btfss	___lwmod@divisor+1,7
  2912     05E2  2DE4               	goto	u931
  2913     05E3  2DE5               	goto	u930
  2914     05E4                     u931:
  2915     05E4  2DD6               	goto	l1584
  2916     05E5                     u930:
  2917     05E5                     l1590:
  2918     05E5  0874               	movf	___lwmod@divisor+1,w
  2919     05E6  0276               	subwf	___lwmod@dividend+1,w
  2920     05E7  1D03               	skipz
  2921     05E8  2DEB               	goto	u945
  2922     05E9  0873               	movf	___lwmod@divisor,w
  2923     05EA  0275               	subwf	___lwmod@dividend,w
  2924     05EB                     u945:
  2925     05EB  1C03               	skipc
  2926     05EC  2DEE               	goto	u941
  2927     05ED  2DEF               	goto	u940
  2928     05EE                     u941:
  2929     05EE  2DF5               	goto	l1594
  2930     05EF                     u940:
  2931     05EF                     l1592:
  2932     05EF  0873               	movf	___lwmod@divisor,w
  2933     05F0  02F5               	subwf	___lwmod@dividend,f
  2934     05F1  0874               	movf	___lwmod@divisor+1,w
  2935     05F2  1C03               	skipc
  2936     05F3  03F6               	decf	___lwmod@dividend+1,f
  2937     05F4  02F6               	subwf	___lwmod@dividend+1,f
  2938     05F5                     l1594:
  2939     05F5  3001               	movlw	1
  2940     05F6                     u955:
  2941     05F6  1003               	clrc
  2942     05F7  0CF4               	rrf	___lwmod@divisor+1,f
  2943     05F8  0CF3               	rrf	___lwmod@divisor,f
  2944     05F9  3EFF               	addlw	-1
  2945     05FA  1D03               	skipz
  2946     05FB  2DF6               	goto	u955
  2947     05FC                     l1596:
  2948     05FC  3001               	movlw	1
  2949     05FD  02F7               	subwf	___lwmod@counter,f
  2950     05FE  1D03               	btfss	3,2
  2951     05FF  2E01               	goto	u961
  2952     0600  2E02               	goto	u960
  2953     0601                     u961:
  2954     0601  2DE5               	goto	l1590
  2955     0602                     u960:
  2956     0602                     l1598:
  2957     0602  0876               	movf	___lwmod@dividend+1,w
  2958     0603  00F4               	movwf	?___lwmod+1
  2959     0604  0875               	movf	___lwmod@dividend,w
  2960     0605  00F3               	movwf	?___lwmod
  2961     0606                     l616:
  2962     0606  0008               	return
  2963     0607                     __end_of___lwmod:
  2964                           
  2965                           	psect	text11
  2966     054E                     __ptext11:	
  2967 ;; *************** function ___lwdiv *****************
  2968 ;; Defined at:
  2969 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  divisor         2    3[COMMON] unsigned int 
  2972 ;;  dividend        2    5[COMMON] unsigned int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  quotient        2    7[COMMON] unsigned int 
  2975 ;;  counter         1    9[COMMON] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2    3[COMMON] unsigned int 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, btemp+1
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         4       0       0       0       0
  2986 ;;      Locals:         3       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0
  2988 ;;      Totals:         7       0       0       0       0
  2989 ;;Total ram usage:        7 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; Hardware stack levels required when called: 1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999     054E                     ___lwdiv:	
  3000                           ;psect for function ___lwdiv
  3001                           
  3002     054E                     l1554:	
  3003                           ;incstack = 0
  3004                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3005                           
  3006     054E  01F7               	clrf	___lwdiv@quotient
  3007     054F  01F8               	clrf	___lwdiv@quotient+1
  3008     0550                     l1556:
  3009     0550  0873               	movf	___lwdiv@divisor,w
  3010     0551  0474               	iorwf	___lwdiv@divisor+1,w
  3011     0552  1903               	btfsc	3,2
  3012     0553  2D55               	goto	u841
  3013     0554  2D56               	goto	u840
  3014     0555                     u841:
  3015     0555  2D8D               	goto	l1576
  3016     0556                     u840:
  3017     0556                     l1558:
  3018     0556  01F9               	clrf	___lwdiv@counter
  3019     0557  0AF9               	incf	___lwdiv@counter,f
  3020     0558  2D64               	goto	l1564
  3021     0559                     l1560:
  3022     0559  3001               	movlw	1
  3023     055A                     u855:
  3024     055A  1003               	clrc
  3025     055B  0DF3               	rlf	___lwdiv@divisor,f
  3026     055C  0DF4               	rlf	___lwdiv@divisor+1,f
  3027     055D  3EFF               	addlw	-1
  3028     055E  1D03               	skipz
  3029     055F  2D5A               	goto	u855
  3030     0560                     l1562:
  3031     0560  3001               	movlw	1
  3032     0561  00FF               	movwf	btemp+1
  3033     0562  087F               	movf	btemp+1,w
  3034     0563  07F9               	addwf	___lwdiv@counter,f
  3035     0564                     l1564:
  3036     0564  1FF4               	btfss	___lwdiv@divisor+1,7
  3037     0565  2D67               	goto	u861
  3038     0566  2D68               	goto	u860
  3039     0567                     u861:
  3040     0567  2D59               	goto	l1560
  3041     0568                     u860:
  3042     0568                     l1566:
  3043     0568  3001               	movlw	1
  3044     0569                     u875:
  3045     0569  1003               	clrc
  3046     056A  0DF7               	rlf	___lwdiv@quotient,f
  3047     056B  0DF8               	rlf	___lwdiv@quotient+1,f
  3048     056C  3EFF               	addlw	-1
  3049     056D  1D03               	skipz
  3050     056E  2D69               	goto	u875
  3051     056F  0874               	movf	___lwdiv@divisor+1,w
  3052     0570  0276               	subwf	___lwdiv@dividend+1,w
  3053     0571  1D03               	skipz
  3054     0572  2D75               	goto	u885
  3055     0573  0873               	movf	___lwdiv@divisor,w
  3056     0574  0275               	subwf	___lwdiv@dividend,w
  3057     0575                     u885:
  3058     0575  1C03               	skipc
  3059     0576  2D78               	goto	u881
  3060     0577  2D79               	goto	u880
  3061     0578                     u881:
  3062     0578  2D80               	goto	l1572
  3063     0579                     u880:
  3064     0579                     l1568:
  3065     0579  0873               	movf	___lwdiv@divisor,w
  3066     057A  02F5               	subwf	___lwdiv@dividend,f
  3067     057B  0874               	movf	___lwdiv@divisor+1,w
  3068     057C  1C03               	skipc
  3069     057D  03F6               	decf	___lwdiv@dividend+1,f
  3070     057E  02F6               	subwf	___lwdiv@dividend+1,f
  3071     057F                     l1570:
  3072     057F  1477               	bsf	___lwdiv@quotient,0
  3073     0580                     l1572:
  3074     0580  3001               	movlw	1
  3075     0581                     u895:
  3076     0581  1003               	clrc
  3077     0582  0CF4               	rrf	___lwdiv@divisor+1,f
  3078     0583  0CF3               	rrf	___lwdiv@divisor,f
  3079     0584  3EFF               	addlw	-1
  3080     0585  1D03               	skipz
  3081     0586  2D81               	goto	u895
  3082     0587                     l1574:
  3083     0587  3001               	movlw	1
  3084     0588  02F9               	subwf	___lwdiv@counter,f
  3085     0589  1D03               	btfss	3,2
  3086     058A  2D8C               	goto	u901
  3087     058B  2D8D               	goto	u900
  3088     058C                     u901:
  3089     058C  2D68               	goto	l1566
  3090     058D                     u900:
  3091     058D                     l1576:
  3092     058D  0878               	movf	___lwdiv@quotient+1,w
  3093     058E  00F4               	movwf	?___lwdiv+1
  3094     058F  0877               	movf	___lwdiv@quotient,w
  3095     0590  00F3               	movwf	?___lwdiv
  3096     0591                     l606:
  3097     0591  0008               	return
  3098     0592                     __end_of___lwdiv:
  3099                           
  3100                           	psect	text12
  3101     0741                     __ptext12:	
  3102 ;; *************** function _LCD_SHOW_CURSOR *****************
  3103 ;; Defined at:
  3104 ;;		line 93 in file "LCD.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  c               1    wreg     unsigned char 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  c               1    7[COMMON] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       0       0       0       0
  3119 ;;      Locals:         1       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0
  3121 ;;      Totals:         2       0       0       0       0
  3122 ;;Total ram usage:        2 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 3
  3125 ;; This function calls:
  3126 ;;		_LCD_CMD
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132     0741                     _LCD_SHOW_CURSOR:	
  3133                           ;psect for function _LCD_SHOW_CURSOR
  3134                           
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _LCD_SHOW_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  3138                           ;LCD_SHOW_CURSOR@c stored from wreg
  3139     0741  00F7               	movwf	LCD_SHOW_CURSOR@c
  3140     0742                     l2012:
  3141                           
  3142                           ;LCD.c: 94:     LCD_CMD(0);
  3143     0742  3000               	movlw	0
  3144     0743  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3145     0748                     l2014:
  3146                           
  3147                           ;LCD.c: 95:     if(c == 1) LCD_CMD(0x0E);
  3148     0748  0377               	decf	LCD_SHOW_CURSOR@c,w
  3149     0749  1D03               	btfss	3,2
  3150     074A  2F4C               	goto	u1381
  3151     074B  2F4D               	goto	u1380
  3152     074C                     u1381:
  3153     074C  2F54               	goto	l2018
  3154     074D                     u1380:
  3155     074D                     l2016:
  3156     074D  300E               	movlw	14
  3157     074E  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3158     0753  2F5A               	goto	l2020
  3159     0754                     l2018:
  3160     0754  300C               	movlw	12
  3161     0755  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3162     075A                     l2020:
  3163                           
  3164                           ;LCD.c: 97:     _delay((unsigned long)((37)*(4000000/4000000.0)));
  3165     075A  300C               	movlw	12
  3166     075B  00F6               	movwf	??_LCD_SHOW_CURSOR
  3167     075C                     u1867:
  3168     075C  0BF6               	decfsz	??_LCD_SHOW_CURSOR,f
  3169     075D  2F5C               	goto	u1867
  3170     075E                     l201:
  3171     075E  0008               	return
  3172     075F                     __end_of_LCD_SHOW_CURSOR:
  3173                           
  3174                           	psect	text13
  3175     049C                     __ptext13:	
  3176 ;; *************** function _LCD_INIT *****************
  3177 ;; Defined at:
  3178 ;;		line 32 in file "LCD.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         0       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0
  3194 ;;      Temps:          2       0       0       0       0
  3195 ;;      Totals:         2       0       0       0       0
  3196 ;;Total ram usage:        2 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 3
  3199 ;; This function calls:
  3200 ;;		_LCD_CMD
  3201 ;;		_LCD_DATA_4BIT
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     049C                     _LCD_INIT:	
  3208                           ;psect for function _LCD_INIT
  3209                           
  3210     049C                     l1976:	
  3211                           ;incstack = 0
  3212                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  3213                           
  3214                           
  3215                           ;LCD.c: 34:     TRISB = 0x00;
  3216     049C  1683               	bsf	3,5	;RP0=1, select bank1
  3217     049D  1303               	bcf	3,6	;RP1=0, select bank1
  3218     049E  0186               	clrf	6	;volatile
  3219     049F                     l1978:
  3220                           
  3221                           ;LCD.c: 35:     TRISB5 = 0;
  3222     049F  1286               	bcf	6,5	;volatile
  3223     04A0                     l1980:
  3224                           
  3225                           ;LCD.c: 36:     TRISB4 = 0;
  3226     04A0  1206               	bcf	6,4	;volatile
  3227     04A1                     l1982:
  3228                           
  3229                           ;LCD.c: 38:     LCD_DATA_4BIT(0x00);
  3230     04A1  3000               	movlw	0
  3231     04A2  120A  118A  26E2  120A  118A  	fcall	_LCD_DATA_4BIT
  3232     04A7                     l1984:
  3233                           
  3234                           ;LCD.c: 39:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3235     04A7  3027               	movlw	39
  3236     04A8  00F7               	movwf	??_LCD_INIT+1
  3237     04A9  30F5               	movlw	245
  3238     04AA  00F6               	movwf	??_LCD_INIT
  3239     04AB                     u1877:
  3240     04AB  0BF6               	decfsz	??_LCD_INIT,f
  3241     04AC  2CAB               	goto	u1877
  3242     04AD  0BF7               	decfsz	??_LCD_INIT+1,f
  3243     04AE  2CAB               	goto	u1877
  3244     04AF                     l1986:
  3245                           
  3246                           ;LCD.c: 40:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  3247     04AF  3053               	movlw	83
  3248     04B0  00F6               	movwf	??_LCD_INIT
  3249     04B1                     u1887:
  3250     04B1  0BF6               	decfsz	??_LCD_INIT,f
  3251     04B2  2CB1               	goto	u1887
  3252     04B3                     l1988:
  3253                           
  3254                           ;LCD.c: 41:     LCD_CMD(0x03);
  3255     04B3  3003               	movlw	3
  3256     04B4  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3257     04B9                     l1990:
  3258                           
  3259                           ;LCD.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3260     04B9  3007               	movlw	7
  3261     04BA  00F7               	movwf	??_LCD_INIT+1
  3262     04BB  307D               	movlw	125
  3263     04BC  00F6               	movwf	??_LCD_INIT
  3264     04BD                     u1897:
  3265     04BD  0BF6               	decfsz	??_LCD_INIT,f
  3266     04BE  2CBD               	goto	u1897
  3267     04BF  0BF7               	decfsz	??_LCD_INIT+1,f
  3268     04C0  2CBD               	goto	u1897
  3269     04C1                     l1992:
  3270                           
  3271                           ;LCD.c: 43:     LCD_CMD(0x03);
  3272     04C1  3003               	movlw	3
  3273     04C2  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3274     04C7                     l1994:
  3275                           
  3276                           ;LCD.c: 44:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  3277     04C7  3031               	movlw	49
  3278     04C8  00F6               	movwf	??_LCD_INIT
  3279     04C9                     u1907:
  3280     04C9  0BF6               	decfsz	??_LCD_INIT,f
  3281     04CA  2CC9               	goto	u1907
  3282     04CB  2CCC               	nop2
  3283     04CC                     l1996:
  3284                           
  3285                           ;LCD.c: 45:     LCD_CMD(0x03);
  3286     04CC  3003               	movlw	3
  3287     04CD  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3288     04D2                     l1998:
  3289                           
  3290                           ;LCD.c: 46:     LCD_CMD(0x02);
  3291     04D2  3002               	movlw	2
  3292     04D3  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3293     04D8                     l2000:
  3294                           
  3295                           ;LCD.c: 47:     LCD_CMD(0x02);
  3296     04D8  3002               	movlw	2
  3297     04D9  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3298     04DE                     l2002:
  3299                           
  3300                           ;LCD.c: 48:     LCD_CMD(0x08);
  3301     04DE  3008               	movlw	8
  3302     04DF  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3303     04E4                     l2004:
  3304                           
  3305                           ;LCD.c: 49:     LCD_CMD(0x00);
  3306     04E4  3000               	movlw	0
  3307     04E5  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3308     04EA                     l2006:
  3309                           
  3310                           ;LCD.c: 50:     LCD_CMD(0x0C);
  3311     04EA  300C               	movlw	12
  3312     04EB  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3313     04F0                     l2008:
  3314                           
  3315                           ;LCD.c: 51:     LCD_CMD(0x00);
  3316     04F0  3000               	movlw	0
  3317     04F1  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3318     04F6                     l2010:
  3319                           
  3320                           ;LCD.c: 52:     LCD_CMD(0x06);
  3321     04F6  3006               	movlw	6
  3322     04F7  120A  118A  2776  120A  118A  	fcall	_LCD_CMD
  3323     04FC                     l179:
  3324     04FC  0008               	return
  3325     04FD                     __end_of_LCD_INIT:
  3326                           
  3327                           	psect	text14
  3328     0776                     __ptext14:	
  3329 ;; *************** function _LCD_CMD *****************
  3330 ;; Defined at:
  3331 ;;		line 24 in file "LCD.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  CMD             1    wreg     unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  CMD             1    5[COMMON] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       0       0       0       0
  3346 ;;      Locals:         1       0       0       0       0
  3347 ;;      Temps:          1       0       0       0       0
  3348 ;;      Totals:         2       0       0       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 2
  3352 ;; This function calls:
  3353 ;;		_LCD_DATA_4BIT
  3354 ;; This function is called by:
  3355 ;;		_LCD_INIT
  3356 ;;		_LCD_CLEAR
  3357 ;;		_LCD_DISPLAY
  3358 ;;		_LCD_SHOW_CURSOR
  3359 ;;		_LCD_SET_CURSOR
  3360 ;;		_RETURN_HOME
  3361 ;;		_LCD_SR
  3362 ;;		_LCD_SL
  3363 ;;		_LCD_CR
  3364 ;;		_LCD_CL
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368     0776                     _LCD_CMD:	
  3369                           ;psect for function _LCD_CMD
  3370                           
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3374                           ;LCD_CMD@CMD stored from wreg
  3375     0776  00F5               	movwf	LCD_CMD@CMD
  3376     0777                     l1922:
  3377                           
  3378                           ;LCD.c: 25:     RB4 = 0;
  3379     0777  1283               	bcf	3,5	;RP0=0, select bank0
  3380     0778  1303               	bcf	3,6	;RP1=0, select bank0
  3381     0779  1206               	bcf	6,4	;volatile
  3382     077A                     l1924:
  3383                           
  3384                           ;LCD.c: 26:     LCD_DATA_4BIT(CMD);
  3385     077A  0875               	movf	LCD_CMD@CMD,w
  3386     077B  120A  118A  26E2  120A  118A  	fcall	_LCD_DATA_4BIT
  3387     0780                     l1926:
  3388                           
  3389                           ;LCD.c: 27:     RB5 = 1;
  3390     0780  1283               	bcf	3,5	;RP0=0, select bank0
  3391     0781  1303               	bcf	3,6	;RP1=0, select bank0
  3392     0782  1686               	bsf	6,5	;volatile
  3393     0783                     l1928:
  3394                           
  3395                           ;LCD.c: 28:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  3396     0783  3053               	movlw	83
  3397     0784  00F4               	movwf	??_LCD_CMD
  3398     0785                     u1917:
  3399     0785  0BF4               	decfsz	??_LCD_CMD,f
  3400     0786  2F85               	goto	u1917
  3401     0787                     l1930:
  3402                           
  3403                           ;LCD.c: 29:     RB5 = 0;
  3404     0787  1283               	bcf	3,5	;RP0=0, select bank0
  3405     0788  1303               	bcf	3,6	;RP1=0, select bank0
  3406     0789  1286               	bcf	6,5	;volatile
  3407     078A                     l176:
  3408     078A  0008               	return
  3409     078B                     __end_of_LCD_CMD:
  3410                           
  3411                           	psect	text15
  3412     06E2                     __ptext15:	
  3413 ;; *************** function _LCD_DATA_4BIT *****************
  3414 ;; Defined at:
  3415 ;;		line 3 in file "LCD.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  data            1    wreg     unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  data            1    3[COMMON] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         1       0       0       0       0
  3433 ;;Total ram usage:        1 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_LCD_CMD
  3440 ;;		_LCD_INIT
  3441 ;;		_LCD_WRITE_CHAR
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445     06E2                     _LCD_DATA_4BIT:	
  3446                           ;psect for function _LCD_DATA_4BIT
  3447                           
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in _LCD_DATA_4BIT: [wreg]
  3451                           ;LCD_DATA_4BIT@data stored from wreg
  3452     06E2  00F3               	movwf	LCD_DATA_4BIT@data
  3453     06E3                     l1888:
  3454                           
  3455                           ;LCD.c: 4:     if(data & 1)
  3456     06E3  1C73               	btfss	LCD_DATA_4BIT@data,0
  3457     06E4  2EE6               	goto	u1271
  3458     06E5  2EE7               	goto	u1270
  3459     06E6                     u1271:
  3460     06E6  2EEB               	goto	l165
  3461     06E7                     u1270:
  3462     06E7                     l1890:
  3463                           
  3464                           ;LCD.c: 5:         RB0 = 1;
  3465     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  3466     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  3467     06E9  1406               	bsf	6,0	;volatile
  3468     06EA  2EEE               	goto	l166
  3469     06EB                     l165:	
  3470                           ;LCD.c: 6:     else
  3471                           
  3472                           
  3473                           ;LCD.c: 7:         RB0 = 0;
  3474     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3475     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3476     06ED  1006               	bcf	6,0	;volatile
  3477     06EE                     l166:
  3478                           
  3479                           ;LCD.c: 9:     if(data & 2)
  3480     06EE  1CF3               	btfss	LCD_DATA_4BIT@data,1
  3481     06EF  2EF1               	goto	u1281
  3482     06F0  2EF2               	goto	u1280
  3483     06F1                     u1281:
  3484     06F1  2EF4               	goto	l167
  3485     06F2                     u1280:
  3486     06F2                     l1892:
  3487                           
  3488                           ;LCD.c: 10:         RB1 = 1;
  3489     06F2  1486               	bsf	6,1	;volatile
  3490     06F3  2EF5               	goto	l168
  3491     06F4                     l167:	
  3492                           ;LCD.c: 11:     else
  3493                           
  3494                           
  3495                           ;LCD.c: 12:         RB1 = 0;
  3496     06F4  1086               	bcf	6,1	;volatile
  3497     06F5                     l168:
  3498                           
  3499                           ;LCD.c: 14:     if(data & 4)
  3500     06F5  1D73               	btfss	LCD_DATA_4BIT@data,2
  3501     06F6  2EF8               	goto	u1291
  3502     06F7  2EF9               	goto	u1290
  3503     06F8                     u1291:
  3504     06F8  2EFB               	goto	l169
  3505     06F9                     u1290:
  3506     06F9                     l1894:
  3507                           
  3508                           ;LCD.c: 15:         RB2 = 1;
  3509     06F9  1506               	bsf	6,2	;volatile
  3510     06FA  2EFC               	goto	l170
  3511     06FB                     l169:	
  3512                           ;LCD.c: 16:     else
  3513                           
  3514                           
  3515                           ;LCD.c: 17:         RB2 = 0;
  3516     06FB  1106               	bcf	6,2	;volatile
  3517     06FC                     l170:
  3518                           
  3519                           ;LCD.c: 19:     if(data & 8)
  3520     06FC  1DF3               	btfss	LCD_DATA_4BIT@data,3
  3521     06FD  2EFF               	goto	u1301
  3522     06FE  2F00               	goto	u1300
  3523     06FF                     u1301:
  3524     06FF  2F02               	goto	l171
  3525     0700                     u1300:
  3526     0700                     l1896:
  3527                           
  3528                           ;LCD.c: 20:         RB3 = 1;
  3529     0700  1586               	bsf	6,3	;volatile
  3530     0701  2F03               	goto	l173
  3531     0702                     l171:	
  3532                           ;LCD.c: 21:     else
  3533                           
  3534                           
  3535                           ;LCD.c: 22:         RB3 = 0;
  3536     0702  1186               	bcf	6,3	;volatile
  3537     0703                     l173:
  3538     0703  0008               	return
  3539     0704                     __end_of_LCD_DATA_4BIT:
  3540                           
  3541                           	psect	text16
  3542     063B                     __ptext16:	
  3543 ;; *************** function _EEPROM_Write *****************
  3544 ;; Defined at:
  3545 ;;		line 3 in file "EEPROM_.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  address         1    wreg     unsigned char 
  3548 ;;  data            1    0[BANK0 ] unsigned char 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  address         1    1[BANK0 ] unsigned char 
  3551 ;;  GIE_STATE       1    2[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       1       0       0       0
  3562 ;;      Locals:         0       2       0       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         0       3       0       0       0
  3565 ;;Total ram usage:        3 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575     063B                     _EEPROM_Write:	
  3576                           ;psect for function _EEPROM_Write
  3577                           
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _EEPROM_Write: [wreg+status,2]
  3581                           ;EEPROM_Write@address stored from wreg
  3582     063B  1283               	bcf	3,5	;RP0=0, select bank0
  3583     063C  1303               	bcf	3,6	;RP1=0, select bank0
  3584     063D  00A1               	movwf	EEPROM_Write@address
  3585     063E                     l2036:
  3586                           
  3587                           ;EEPROM_.c: 4:     uint8_t GIE_STATE = GIE;
  3588     063E  3000               	movlw	0
  3589     063F  1B8B               	btfsc	11,7	;volatile
  3590     0640  3001               	movlw	1
  3591     0641  00A2               	movwf	EEPROM_Write@GIE_STATE
  3592     0642                     l234:	
  3593                           ;EEPROM_.c: 5:     while(EECON1bits.WR);
  3594                           
  3595     0642  1683               	bsf	3,5	;RP0=1, select bank3
  3596     0643  1703               	bsf	3,6	;RP1=1, select bank3
  3597     0644  188C               	btfsc	12,1	;volsfr
  3598     0645  2E47               	goto	u1391
  3599     0646  2E48               	goto	u1390
  3600     0647                     u1391:
  3601     0647  2E42               	goto	l234
  3602     0648                     u1390:
  3603     0648                     l2038:
  3604                           
  3605                           ;EEPROM_.c: 6:     EEADR = address;
  3606     0648  1283               	bcf	3,5	;RP0=0, select bank0
  3607     0649  1303               	bcf	3,6	;RP1=0, select bank0
  3608     064A  0821               	movf	EEPROM_Write@address,w
  3609     064B  1283               	bcf	3,5	;RP0=0, select bank2
  3610     064C  1703               	bsf	3,6	;RP1=1, select bank2
  3611     064D  008D               	movwf	13	;volatile
  3612                           
  3613                           ;EEPROM_.c: 7:     EEDATA = data;
  3614     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3615     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0650  0820               	movf	EEPROM_Write@data,w
  3617     0651  1283               	bcf	3,5	;RP0=0, select bank2
  3618     0652  1703               	bsf	3,6	;RP1=1, select bank2
  3619     0653  008C               	movwf	12	;volatile
  3620     0654                     l2040:
  3621                           
  3622                           ;EEPROM_.c: 8:     EECON1bits.EEPGD = 0;
  3623     0654  1683               	bsf	3,5	;RP0=1, select bank3
  3624     0655  1703               	bsf	3,6	;RP1=1, select bank3
  3625     0656  138C               	bcf	12,7	;volsfr
  3626     0657                     l2042:
  3627                           
  3628                           ;EEPROM_.c: 9:     EECON1bits.WREN = 1;
  3629     0657  150C               	bsf	12,2	;volsfr
  3630     0658                     l2044:
  3631                           
  3632                           ;EEPROM_.c: 10:     GIE = 0;
  3633     0658  138B               	bcf	11,7	;volatile
  3634                           
  3635                           ;EEPROM_.c: 11:     EECON2 = 0x55;
  3636     0659  3055               	movlw	85
  3637     065A  008D               	movwf	13	;volsfr
  3638                           
  3639                           ;EEPROM_.c: 12:     EECON2 = 0xAA;
  3640     065B  30AA               	movlw	170
  3641     065C  008D               	movwf	13	;volsfr
  3642     065D                     l2046:
  3643                           
  3644                           ;EEPROM_.c: 13:     EECON1bits.WR = 1;
  3645     065D  148C               	bsf	12,1	;volsfr
  3646     065E                     l2048:
  3647                           
  3648                           ;EEPROM_.c: 14:     GIE = GIE_STATE;
  3649     065E  1283               	bcf	3,5	;RP0=0, select bank0
  3650     065F  1303               	bcf	3,6	;RP1=0, select bank0
  3651     0660  1822               	btfsc	EEPROM_Write@GIE_STATE,0
  3652     0661  2E63               	goto	u1401
  3653     0662  2E65               	goto	u1400
  3654     0663                     u1401:
  3655     0663  178B               	bsf	11,7	;volatile
  3656     0664  2E66               	goto	u1414
  3657     0665                     u1400:
  3658     0665  138B               	bcf	11,7	;volatile
  3659     0666                     u1414:
  3660     0666                     l2050:
  3661                           
  3662                           ;EEPROM_.c: 15:     EECON1bits.WREN = 0;
  3663     0666  1683               	bsf	3,5	;RP0=1, select bank3
  3664     0667  1703               	bsf	3,6	;RP1=1, select bank3
  3665     0668  110C               	bcf	12,2	;volsfr
  3666     0669                     l2052:
  3667                           
  3668                           ;EEPROM_.c: 16:     EECON1bits.WR = 0;
  3669     0669  108C               	bcf	12,1	;volsfr
  3670     066A                     l237:
  3671     066A  0008               	return
  3672     066B                     __end_of_EEPROM_Write:
  3673                           
  3674                           	psect	text17
  3675     079C                     __ptext17:	
  3676 ;; *************** function _EEPROM_Read *****************
  3677 ;; Defined at:
  3678 ;;		line 18 in file "EEPROM_.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  address         1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  address         1    3[COMMON] unsigned char 
  3683 ;;  data            1    4[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      unsigned char 
  3686 ;; Registers used:
  3687 ;;		wreg
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         2       0       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707     079C                     _EEPROM_Read:	
  3708                           ;psect for function _EEPROM_Read
  3709                           
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _EEPROM_Read: [wreg]
  3713                           ;EEPROM_Read@address stored from wreg
  3714     079C  00F3               	movwf	EEPROM_Read@address
  3715     079D                     l1484:
  3716                           
  3717                           ;EEPROM_.c: 19:     uint8_t data;;EEPROM_.c: 20:     EEADR = address;
  3718     079D  0873               	movf	EEPROM_Read@address,w
  3719     079E  1283               	bcf	3,5	;RP0=0, select bank2
  3720     079F  1703               	bsf	3,6	;RP1=1, select bank2
  3721     07A0  008D               	movwf	13	;volatile
  3722     07A1                     l1486:
  3723                           
  3724                           ;EEPROM_.c: 21:     EECON1bits.EEPGD = 0;
  3725     07A1  1683               	bsf	3,5	;RP0=1, select bank3
  3726     07A2  1703               	bsf	3,6	;RP1=1, select bank3
  3727     07A3  138C               	bcf	12,7	;volsfr
  3728     07A4                     l1488:
  3729                           
  3730                           ;EEPROM_.c: 22:     EECON1bits.RD = 1;
  3731     07A4  140C               	bsf	12,0	;volsfr
  3732                           
  3733                           ;EEPROM_.c: 23:     data = EEDATA;
  3734     07A5  1283               	bcf	3,5	;RP0=0, select bank2
  3735     07A6  1703               	bsf	3,6	;RP1=1, select bank2
  3736     07A7  080C               	movf	12,w	;volatile
  3737     07A8  00F4               	movwf	EEPROM_Read@data
  3738                           
  3739                           ;EEPROM_.c: 24:     return data;
  3740     07A9  0874               	movf	EEPROM_Read@data,w
  3741     07AA                     l240:
  3742     07AA  0008               	return
  3743     07AB                     __end_of_EEPROM_Read:
  3744                           
  3745                           	psect	text18
  3746     0704                     __ptext18:	
  3747 ;; *************** function _ISR *****************
  3748 ;; Defined at:
  3749 ;;		line 273 in file "main.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, btemp+1
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0
  3765 ;;      Temps:          3       0       0       0       0
  3766 ;;      Totals:         3       0       0       0       0
  3767 ;;Total ram usage:        3 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		Interrupt level 1
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776     0704                     _ISR:	
  3777                           ;psect for function _ISR
  3778                           
  3779     0704                     i1l1856:
  3780                           
  3781                           ;main.c: 274:     if(TMR1IF){
  3782     0704  1283               	bcf	3,5	;RP0=0, select bank0
  3783     0705  1303               	bcf	3,6	;RP1=0, select bank0
  3784     0706  1C0C               	btfss	12,0	;volatile
  3785     0707  2F09               	goto	u125_21
  3786     0708  2F0A               	goto	u125_20
  3787     0709                     u125_21:
  3788     0709  2F1A               	goto	i1l142
  3789     070A                     u125_20:
  3790     070A                     i1l1858:
  3791                           
  3792                           ;main.c: 275:         TMR1 = preload;
  3793     070A  082F               	movf	_preload+1,w
  3794     070B  008F               	movwf	15	;volatile
  3795     070C  082E               	movf	_preload,w
  3796     070D  008E               	movwf	14	;volatile
  3797     070E                     i1l1860:
  3798                           
  3799                           ;main.c: 276:         counter++;
  3800     070E  3001               	movlw	1
  3801     070F  00FF               	movwf	btemp+1
  3802     0710  087F               	movf	btemp+1,w
  3803     0711  07FA               	addwf	_counter,f
  3804     0712                     i1l1862:
  3805                           
  3806                           ;main.c: 277:         if(counter == 20){
  3807     0712  3014               	movlw	20
  3808     0713  067A               	xorwf	_counter,w
  3809     0714  1D03               	btfss	3,2
  3810     0715  2F17               	goto	u126_21
  3811     0716  2F18               	goto	u126_20
  3812     0717                     u126_21:
  3813     0717  2F19               	goto	i1l1866
  3814     0718                     u126_20:
  3815     0718                     i1l1864:
  3816                           
  3817                           ;main.c: 282:             counter = 0;
  3818     0718  01FA               	clrf	_counter
  3819     0719                     i1l1866:
  3820                           
  3821                           ;main.c: 284:         TMR1IF = 0;
  3822     0719  100C               	bcf	12,0	;volatile
  3823     071A                     i1l142:
  3824     071A  0872               	movf	??_ISR+2,w
  3825     071B  00FF               	movwf	btemp+1
  3826     071C  0871               	movf	??_ISR+1,w
  3827     071D  008A               	movwf	10
  3828     071E  0E70               	swapf	??_ISR,w
  3829     071F  0083               	movwf	3
  3830     0720  0EFE               	swapf	btemp,f
  3831     0721  0E7E               	swapf	btemp,w
  3832     0722  0009               	retfie
  3833     0723                     __end_of_ISR:
  3834     007E                     btemp	set	126	;btemp
  3835     007E                     wtemp0	set	126
  3836                           
  3837                           	psect	intentry
  3838     0004                     __pintentry:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  3841                           
  3842     0004                     interrupt_function:
  3843     007E                     saved_w	set	btemp
  3844     0004  00FE               	movwf	btemp
  3845     0005  0E03               	swapf	3,w
  3846     0006  00F0               	movwf	??_ISR
  3847     0007  080A               	movf	10,w
  3848     0008  00F1               	movwf	??_ISR+1
  3849     0009  087F               	movf	btemp+1,w
  3850     000A  00F2               	movwf	??_ISR+2
  3851     000B  120A  118A  2F04   	ljmp	_ISR
  3852                           
  3853                           	psect	config
  3854                           
  3855                           ;Config register CONFIG @ 0x2007
  3856                           ;	Oscillator Selection bits
  3857                           ;	FOSC = XT, XT oscillator
  3858                           ;	Watchdog Timer Enable bit
  3859                           ;	WDTE = OFF, WDT disabled
  3860                           ;	Power-up Timer Enable bit
  3861                           ;	PWRTE = ON, PWRT enabled
  3862                           ;	Brown-out Reset Enable bit
  3863                           ;	BOREN = ON, BOR enabled
  3864                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3865                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3866                           ;	Data EEPROM Memory Code Protection bit
  3867                           ;	CPD = OFF, Data EEPROM code protection off
  3868                           ;	Flash Program Memory Write Enable bits
  3869                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3870                           ;	In-Circuit Debugger Mode bit
  3871                           ;	DEBUG = 0x1, unprogrammed default
  3872                           ;	Flash Program Memory Code Protection bit
  3873                           ;	CP = OFF, Code protection off
  3874     2007                     	org	8199
  3875     2007  3F71               	dw	16241

Data Sizes:
    Strings     150
    Constant    0
    Data        1
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     11      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WRITE_STRING@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[12]), STR_10(CODE[15]), STR_11(CODE[15]), STR_12(CODE[13]), 
		 -> STR_13(CODE[17]), STR_14(CODE[11]), STR_2(CODE[11]), STR_3(CODE[13]), 
		 -> STR_4(CODE[6]), STR_5(CODE[12]), STR_6(CODE[10]), STR_7(CODE[10]), 
		 -> STR_8(CODE[11]), STR_9(CODE[15]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main_menu->_LCD_SET_CURSOR
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_WRITE_CHAR->_LCD_DATA_4BIT
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_CLEAR->_LCD_CMD
    _blink->_LCD_DISPLAY
    _LCD_DISPLAY->_LCD_CMD
    _LCD_SHOW_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD
    _LCD_CMD->_LCD_DATA_4BIT
    _EEPROM_Write->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_SET_CURSOR
    _main_menu->_LCD_SET_CURSOR

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   10327
                                              4 BANK0      7     7      0
                        _EEPROM_Read
                       _EEPROM_Write
                          _LCD_CLEAR
                           _LCD_INIT
                     _LCD_SET_CURSOR
                    _LCD_SHOW_CURSOR
                     _LCD_WRITE_CHAR
                   _LCD_WRITE_STRING
                            ___lwdiv
                            ___lwmod
                             ___wmul
                              _blink
                          _main_menu
                   _timer1_timermode
 ---------------------------------------------------------------------------------
 (1) _timer1_timermode                                     3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            0     0      0    3208
                          _LCD_CLEAR
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_STRING                                     3     3      0     888
                                              0 BANK0      3     3      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (3) _LCD_WRITE_CHAR                                       4     4      0     254
                                              4 COMMON     4     4      0
                      _LCD_DATA_4BIT
 ---------------------------------------------------------------------------------
 (2) _LCD_SET_CURSOR                                       6     5      1    2165
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CLEAR                                            1     1      0     155
                                              6 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _blink                                                4     4      0     254
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _LCD_DISPLAY
 ---------------------------------------------------------------------------------
 (2) _LCD_DISPLAY                                          2     2      0     186
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1004
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     463
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_SHOW_CURSOR                                      2     2      0     186
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _LCD_CMD
                      _LCD_DATA_4BIT
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     155
                                              4 COMMON     2     2      0
                      _LCD_DATA_4BIT
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA_4BIT                                        1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     2      1     456
                                              0 BANK0      3     2      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      45
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _LCD_CLEAR
     _LCD_CMD
       _LCD_DATA_4BIT
   _LCD_INIT
     _LCD_CMD
     _LCD_DATA_4BIT
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_SHOW_CURSOR
     _LCD_CMD
   _LCD_WRITE_CHAR
     _LCD_DATA_4BIT
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   ___lwdiv
   ___lwmod
   ___wmul
   _blink
     _LCD_DISPLAY
       _LCD_CMD
   _main_menu
     _LCD_CLEAR
     _LCD_SET_CURSOR
     _LCD_WRITE_STRING
   _timer1_timermode

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 13 20:11:42 2023

          ?_LCD_WRITE_CHAR 0070                          pc 0002            ??_LCD_DATA_4BIT 0073  
                       fsr 0004        ___wmul@multiplicand 0075          ?_LCD_WRITE_STRING 0070  
                      l111 03F6                        l201 075E                        l132 063A  
                      l221 054D                        l127 0693                        l135 0775  
                      l240 07AA                        l234 0642                        l170 06FC  
                      l171 0702                        l237 066A                        l173 0703  
                      l165 06EB                        l166 06EE                        l326 06C9  
                      l182 05CC                        l167 06F4                        l191 079B  
                      l168 06F5                        l176 078A                        l328 06E1  
                      l169 06FB                        l179 04FC                        l196 0740  
                      l188 06BC                        l606 0591                        l616 0606  
                      _GIE 005F                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RD0 0040  
                      _RB4 0034                        _RD1 0041                        _RB5 0035  
                      _RD2 0042                        _RD3 0043                        _ISR 0704  
                      u800 06C3                        u801 06C2                        u900 058D  
                      u901 058C                        u910 05D3                        u830 06DD  
                      u911 05D2                        u831 06DC                        u815 06CA  
                      u840 0556                        u841 0555                        u825 06D1  
                      u930 05E5                        u931 05E4                        u860 0568  
                      u940 05EF                        u861 0567                        u941 05EE  
                      u925 05D7                        u855 055A                        u880 0579  
                      u960 0602                        u881 0578                        u961 0601  
                      u945 05EB                        u875 0569                        u955 05F6  
                      u885 0575                        u895 0581                        fsr0 0004  
       ??_LCD_WRITE_STRING 0078            __end_of_LCD_CMD 078B                       ?_ISR 0070  
                     l2000 04D8                       l2010 04F6                       l2002 04DE  
                     l2004 04E4                       l2020 075A                       l2012 0742  
                     l2100 0071                       l2006 04EA                       l2014 0748  
                     l2030 067F                       l2022 066B                       l2102 0079  
                     l2110 0096                       l2040 0654                       l2008 04F0  
                     l2016 074D                       l2032 0685                       l2024 066F  
                     l2200 01D6                       l2120 00B8                       l2112 009B  
                     l2104 007F                       l2050 0666                       l2042 0657  
                     l2018 0754                       l2034 068D                       l2026 0672  
                     l2210 0200                       l2202 01DE                       l2130 00E2  
                     l2122 00BE                       l2114 00A1                       l2106 0087  
                     l2052 0669                       l2044 0658                       l2036 063E  
                     l2060 0608                       l2028 0677                       l2220 022E  
                     l2212 0206                       l2204 01E4                       l2140 0102  
                     l2124 00D6                       l2116 00AC                       l2132 00E4  
                     l2108 008D                       l2046 065D                       l2038 0648  
                     l2062 060E                       l2054 0607                       l1430 076F  
                     l2302 0398                       l2310 03AC                       l2230 0249  
                     l2214 020C                       l2150 012C                       l2142 0110  
                     l2134 00EB                       l2126 00DA                       l2118 00B2  
                     l2070 001F                       l2048 065E                       l2064 061C  
                     l1432 0772                       l1424 0760                       l2312 03B2  
                     l2304 03A5                       l2240 026E                       l2216 0212  
                     l2208 01FB                       l2160 015A                       l2152 0132  
                     l2144 0118                       l2136 00EF                       l2128 00E0  
                     l2080 0030                       l2072 0025                       l2066 0630  
                     l1434 0773                       l1426 0765                       l2314 03E2  
                     l2250 02BE                       l2242 0274                       l2234 0255  
                     l2218 022A                       l2226 0235                       l2170 0175  
                     l2154 0138                       l2138 00FC                       l2090 0040  
                     l2082 0031                       l2074 002B                       l1540 06BD  
                     l2068 0634                       l1436 0774                       l1428 076C  
                     l2316 03E7                       l2260 02F7                       l2252 02C4  
                     l2244 027F                       l2236 025A                       l2180 01AA  
                     l2172 0180                       l2228 0243                       l2156 013E  
                     l2148 0127                       l2092 004B                       l2084 0035  
                     l2076 002E                       l1550 06DD                       l1542 06BF  
                     l2318 03EF                       l2270 0329                       l2262 0307  
                     l2246 02B1                       l2254 02CF                       l2238 0268  
                     l2190 01BF                       l2182 01AE                       l2174 0186  
                     l2158 0156                       l2166 0161                       l2094 0058  
                     l2086 0035                       l2078 002F                       l1560 0559  
                     l1544 06C3                       l2264 0311                       l2272 032F  
                     l2256 02D6                       l2280 0343                       l2248 02B6  
                     l2192 01C1                       l2184 01B4                       l2176 018C  
                     l2168 016F                       l2096 005E                       l2088 003A  
                     l1570 057F                       l1562 0560                       l1554 054E  
                     l1546 06D0                       l2290 037F                       l2282 0349  
                     l2274 033C                       l2266 031E                       l2258 02E4  
                     l2194 01C3                       l2186 01B6                       l2178 0192  
                     l2098 006C                       l1484 079D                       l1572 0580  
                     l1564 0564                       l1556 0550                       l1580 05CD  
                     l1548 06D7                       l1900 0599                       l2292 0389  
                     l2284 034E                       l2268 0324                       l2196 01C8  
                     l2188 01B8                       l1486 07A1                       l1574 0587  
                     l1566 0568                       l1558 0556                       l1590 05E5  
                     l1582 05D3                       l1910 05B4                       l1902 059C  
                     l2294 0391                       l2286 035C                       l2198 01D0  
                     l1488 07A4                       l1568 0579                       l1576 058D  
                     l1592 05EF                       l1584 05D6                       l1920 05C8  
                     l1912 05B8                       l1904 05AA                       l2296 0395  
                     l2288 036F                       l1930 0787                       l1922 0777  
                     l1594 05F5                       l1586 05DD                       l1914 05BE  
                     l1906 05AD                       l1924 077A                       l1596 05FC  
                     l1588 05E1                       l1932 078B                       l1940 0512  
                     l1916 05C1                       l1908 05B1                       l1926 0780  
                     l1598 0602                       l1934 0797                       l1950 0538  
                     l1942 0515                       l1918 05C5                       l1928 0783  
                     l1952 053B                       l1944 051B                       l1936 0500  
                     l1960 069A                       l1890 06E7                       l1970 072F  
                     l1954 0541                       l1938 0505                       l1946 0523  
                     l1962 06A7                       l1892 06F2                       l1980 04A0  
                     l1972 0736                       l1948 052B                       l1956 0549  
                     l1964 06AF                       l1894 06F9                       l1990 04B9  
                     l1982 04A1                       l1974 073C                       l1966 0724  
                     l1958 0697                       l1896 0700                       l1888 06E3  
                     l1992 04C1                       l1984 04A7                       l1976 049C  
                     l1968 072A                       l1994 04C7                       l1986 04AF  
                     l1978 049F                       l1898 0593                       l1996 04CC  
                     l1988 04B3                       l1998 04D2                       STR_1 044F  
                     STR_2 0472                       STR_3 0442                       STR_4 048C  
                     STR_5 045B                       STR_6 0488                       STR_7 0492  
                     STR_8 0467                       STR_9 0417                       u1300 0700  
                     u1301 06FF                       u1400 0665                       u1320 0505  
                     u1401 0663                       u1321 0504                       u1315 059F  
                     u1420 063A                       u1340 052B                       u1500 013E  
                     u1421 0639                       u1341 052A                       u1501 013D  
                     u1414 0666                       u1270 06E7                       u1510 0160  
                     u1430 004B                       u1271 06E6                       u1335 050B  
                     u1511 015F                       u1431 004A                       u1280 06F2  
                     u1360 06BC                       u1600 0249                       u1520 0175  
                     u1440 00A1                       u1281 06F1                       u1361 06BB  
                     u1601 0248                       u1521 0174                       u1441 00A0  
                     u1290 06F9                       u1370 072F                       u1610 0254  
                     u1530 0180                       u1450 00AC                       u1291 06F8  
                     u1371 072E                       u1355 0531                       u1611 0253  
                     u1531 017F                       u1451 00AB                       u1380 074D  
                     u1700 03B2                       u1620 026E                       u1540 0192  
                     u1460 00BE                       u1381 074C                       u1701 03B1  
                     u1621 026D                       u1541 0191                       u1461 00BD  
                     u1390 0648                       u1630 0274                       u1550 01B4  
                     u1470 00E0                       u1391 0647                       u1631 0273  
                     u1551 01B3                       u1471 00DF                       u1640 027F  
                     u1560 01BF                       u1480 00EB                       u1641 027E  
                     u1561 01BE                       u1481 00EA                       u1650 02D6  
                     u1570 0200                       u1490 012C                       u1651 02D5  
                     u1571 01FF                       u1491 012B                       u1660 0311  
                     u1580 0212                       u1661 0310                       u1581 0211  
                     u1717 0066                       u1670 0349                       u1590 0234  
                     u1807 05CA                       u1671 0348                       u1591 0233  
                     u1727 0120                       u1680 034E                       u1817 054B  
                     u1681 034D                       u1665 030D                       u1737 0169  
                     u1690 0389                       u1907 04C9                       u1827 0799  
                     u1691 0388                       u1747 01F4                       u1917 0785  
                     u1837 0616                       u1757 023D                       u1847 062A  
                     u1695 0385                       u1767 0262                       u1857 073E  
                     u1777 05AF                       u1867 075C                       u1787 05B6  
                     _PEIE 005E                       u1877 04AB                       u1797 05C3  
                     u1887 04B1                       u1897 04BD                       _TMR1 000E  
                     _main 001F                       _line 0030                       btemp 007E  
                     start 000E                      ??_ISR 0070           __end_of_LCD_INIT 04FD  
     __end_of_EEPROM_Write 066B                      ?_main 0070                      _EEADR 010D  
                    STR_10 0426                      STR_11 0426                      STR_12 0435  
                    STR_13 0406                      STR_14 047D            __end_of___lwdiv 0592  
                    i1l142 071A            __end_of___lwmod 0607                      _TRISB 0086  
                    _blink 0607               main@password 0029                      pclath 000A  
                    status 0003                      wtemp0 007E           EEPROM_Write@data 0020  
          __initialization 0011               __end_of_main 03FA          __end_of_LCD_CLEAR 079C  
                   ??_main 0024                  ??_LCD_CMD 0074                     ?_blink 0070  
                   _EEDATA 010C                     _EECON2 018D  timer1_timermode@preloaded 0075  
                   i1l1860 070E                     i1l1862 0712                     i1l1864 0718  
                   i1l1856 0704                     i1l1866 0719                     i1l1858 070A  
                   u125_20 070A                     u125_21 0709                     u126_20 0718  
                   u126_21 0717                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR1CS 0081                     _TMR1ON 0080                     _TRISD0 0440  
                   _TRISB4 0434                     _TRISD1 0441                     _TRISB5 0435  
                   _TRISD2 0442                     _TRISD3 0443           ??_LCD_SET_CURSOR 0077  
                   ___wmul 06BD                     _digits 002D                  ??___lwdiv 0077  
                ??___lwmod 0077                     blink@i 0078                     _screen 002B  
         _timer1_timermode 075F                     saved_w 007E                  ?_LCD_INIT 0070  
  __end_of__initialization 001B           ??_LCD_WRITE_CHAR 0074             __pcstackCOMMON 0070  
             __pidataBANK0 07AB              __end_of_blink 063B                    ??_blink 0020  
             _EEPROM_Write 063B                 __pbssBANK0 002B                 ??_LCD_INIT 0076  
      LCD_WRITE_CHAR@high4 0076                 __pmaintext 001F                    ?___wmul 0073  
               __pintentry 0004                    _T1CKPS0 0084                    _T1CKPS1 0085  
    __end_of_LCD_DATA_4BIT 0704                    _LCD_CMD 0776            LCD_SET_CURSOR@c 0076  
          LCD_SET_CURSOR@r 0020                 __stringtab 0400          LCD_WRITE_STRING@i 0020  
        ??_LCD_SHOW_CURSOR 0076                    ___lwdiv 054E                    ___lwmod 05CD  
        __end_of_main_menu 0694                    __ptext1 075F                    __ptext2 066B  
                  __ptext3 0694                    __ptext4 0592                    __ptext5 04FD  
                  __ptext6 078B                    __ptext7 0607                    __ptext8 0723  
                  __ptext9 06BD                    _counter 007A                  _LCD_CLEAR 078B  
                  _preload 002E                 _take_input 002C       end_of_initialization 001B  
            ??_EEPROM_Read 0073   __end_of_timer1_timermode 0776                 LCD_CMD@CMD 0075  
               ?_LCD_CLEAR 0070              ??_LCD_DISPLAY 0076           _LCD_WRITE_STRING 0694  
      LCD_WRITE_STRING@str 0022        __end_of_EEPROM_Read 07AB             __end_of___wmul 06E2  
          main@check_input 0027        start_initialization 0011                __end_of_ISR 0723  
      __end_of_LCD_DISPLAY 0741                   ??___wmul 0077                __pdataBANK0 0030  
                 ?_LCD_CMD 0070                ??_LCD_CLEAR 0076                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020            _LCD_SHOW_CURSOR 0741  
              _EEPROM_Read 079C                  __pnvBANK0 002E         LCD_WRITE_CHAR@data 0077  
       LCD_WRITE_CHAR@low4 0075           ___lwdiv@dividend 0075                   ?___lwdiv 0073  
                 ?___lwmod 0073                  __pstrings 0400                  _main_menu 066B  
        LCD_DATA_4BIT@data 0073           ___lwdiv@quotient 0077                _LCD_DISPLAY 0723  
         LCD_DISPLAY@state 0077                   _LCD_INIT 049C          interrupt_function 0004  
           ___wmul@product 0077          ?_timer1_timermode 0070         ??_timer1_timermode 0073  
 __end_of_LCD_WRITE_STRING 06BD                __stringbase 0405          ___wmul@multiplier 0073  
               ?_main_menu 0070           LCD_SHOW_CURSOR@c 0077      EEPROM_Write@GIE_STATE 0022  
  __end_of_LCD_SHOW_CURSOR 075F                 _EECON1bits 018C         __end_of__stringtab 0406  
           _LCD_SET_CURSOR 04FD              _LCD_DATA_4BIT 06E2            ___lwdiv@divisor 0073  
      LCD_SET_CURSOR@high4 0021            ___lwdiv@counter 0079                   __ptext10 05CD  
                 __ptext11 054E                   __ptext12 0741                   __ptext13 049C  
                 __ptext14 0776                   __ptext15 06E2                   __ptext16 063B  
                 __ptext17 079C                   __ptext18 0704              ?_EEPROM_Write 0020  
           _LCD_WRITE_CHAR 0592     __end_of_LCD_SET_CURSOR 054E             ?_LCD_DATA_4BIT 0070  
              ??_main_menu 0078           ?_LCD_SHOW_CURSOR 0070             ??_EEPROM_Write 007A  
                 intlevel1 0000         LCD_SET_CURSOR@low4 0022           ___lwmod@dividend 0075  
       LCD_SET_CURSOR@temp 0023               ?_EEPROM_Read 0070                  stringcode 0400  
       EEPROM_Read@address 0073     __end_of_LCD_WRITE_CHAR 05CD            ?_LCD_SET_CURSOR 0076  
          ___lwmod@divisor 0073            ___lwmod@counter 0077                   stringdir 0400  
                 stringtab 0400               ?_LCD_DISPLAY 0070            EEPROM_Read@data 0074  
      EEPROM_Write@address 0021  
